(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1357406,      20092]
NotebookOptionsPosition[   1356190,      20068]
NotebookOutlinePosition[   1356534,      20083]
CellTagsIndexPosition[   1356491,      20080]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{"SetOptions", "[", 
  RowBox[{"$FrontEndSession", ",", 
   RowBox[{"NotebookAutoSave", "\[Rule]", "True"}]}], "]"}], "\n", 
 RowBox[{"NotebookSave", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8197533291692495`*^9, 3.819753347544922*^9}, {
  3.819753577608595*^9, 
  3.819753582894629*^9}},ExpressionUUID->"0e73775f-5958-4916-8bb5-\
be46bf11b77f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{
  "NetModel", "[", 
   "\"\<Unguided Volumetric Regression Net for 3D Face Reconstruction\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819753269986508*^9, 3.819753269988502*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f8fd99f1-4c41-4e4b-be10-aaa7cb774b87"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"200\"", "\"192\"", 
                    "\"192\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 7, 7}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {192, 192}, "$OutputSize" -> {96, 96}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 192, 192}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {96, 96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 96, 96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {96, 96}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 96, 96}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {96, 96}, "$OutputSize" -> {96, 96}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {96, 96}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 96, 96}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {96, 96}, "$OutputSize" -> {96, 96}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {96, 96}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 96, 96}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 96, 
                    96}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {96, 96}, "$OutputSize" -> {96, 96}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "9", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {96, 96}, "$OutputSize" -> {96, 96}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {96, 96}, "$OutputSize" -> {48, 48}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 96, 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "9", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {128, 48, 48}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "9", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Pooling", "Arrays" -> Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "10" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "11" -> Association["Type" -> 
                    "Resize", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association["Type" -> "Chain", 
                    "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath["Outputs", 
                    "Output"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association["Type" -> "Chain", 
                    "Nodes" -> Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Pooling", 
                    "Arrays" -> Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Resize", "Arrays" -> Association[],
                     "Parameters" -> Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Resize", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "9" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> N\
euralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {48,
                     48}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Pooling", "Arrays" -> Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "10" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "3", "Inputs", 
                    "2"] -> NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "11" -> Association["Type" -> 
                    "Resize", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association["Type" -> "Chain", 
                    "Nodes" -> Association["1" -> Association["Type" -> 
                    "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath["Inputs", 
                    "Input"], NeuralNetworks`NetPath["Nodes", "2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "4", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "3", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "6", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "5", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Nodes", "8", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Nodes", "7", 
                    "Outputs", "Output"], NeuralNetworks`NetPath["Nodes", 
                    "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath["Nodes", 
                    "1", "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath["Outputs", 
                    "Output"] -> NeuralNetworks`NetPath["Nodes", "1", 
                    "Outputs", "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Chain", "Nodes" -> Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association["1" -> 
                    Association["Type" -> "Chain", "Nodes" -> Association["1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Total", "Arrays" -> Association[], "Parameters" -> 
                    Association[], "Inputs" -> Association["1" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association["Type" -> "Chain", 
                    "Nodes" -> Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "5" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "6" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "7" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "8" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]]], "9" -> Association["Type" -> 
                    "Convolution", "Arrays" -> Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Pooling", 
                    "Arrays" -> Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association["Type" -> 
                    "Elementwise", "Arrays" -> Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> "Graph", 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Nodes" -> Association[
                    "1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath["Nodes", "1", "Inputs",
                     "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Resize", "Arrays" -> Association[],
                     "Parameters" -> Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}], "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association["Type" -> 
                    "BatchNormalization", "Arrays" -> Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["OutputChannels" -> 
                    128, "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association["Momentum" -> 0.1, 
                    "Epsilon" -> 0.00001, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> Association[
                    "Type" -> "Convolution", "Arrays" -> Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    1, 1}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association["OutputChannels" -> 
                    256, "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     48, 48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {24, 24}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> N\
euralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> Association[
                    "1" -> Association["Type" -> "BatchNormalization", 
                    "Arrays" -> Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, "$SpatialDimensions" -> {24,
                     24}], "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 24, 24}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {24, 24}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 24, 24}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 24, 24}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{256,
                     24, 24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", 
                    "Output"]}]], "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Resize", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Scaled[2], 
                    Scaled[2]}], "Resampling" -> "Nearest", "Dimensionality" -> 
                    2, "$Channels" -> 256, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 24, 
                    24}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]], "Parameters" -> Association[
                    "Momentum" -> 0.1, "Epsilon" -> 0.00001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 48, 48}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 48, 
                    48}, NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    Association[]]], "$Dimensions" -> {256, 48, 48}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 48, 
                    48}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "10" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {48, 48}, "Interleaving" -> False, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association["Momentum" -> 0.1, "Epsilon" -> 0.00001, 
                    "$Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 48, 48}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{200, 256, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{200}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 200, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {48, 48}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{200, 48, 48}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{192, 192}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 200, "$InputSize" -> {48, 48}, 
                    "$OutputSize" -> {192, 192}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{200, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{200, 192, 192}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {200, 192, 192}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{200, 192, 192}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{200, 192, 192}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{200, 192, 192}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 192, 192}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {192, 192}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Version" -> "12.0.11", 
                    "Interleaving" -> False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{200, 192, 192}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"192\"", "\"192\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"96\"", "\"96\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"96\"", "\"96\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"96\"", "\"96\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"96\"", "\"96\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"48\"", "\"48\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"48\"", "\"48\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"48\"", "\"48\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "3", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"48\"", "\"48\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "3", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"48\"", "\"48\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\"", 
                    "\"192\"", "\"192\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\"", 
                    "\"192\"", "\"192\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819753322456143*^9, 3.8197536130567865`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e901a294-0478-48ff-b515-8c4ef2237b2c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"face", " ", "=", " ", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
AHns2ph/fDrimI65IgGL264D8vF8lU/AoXGaVFZdn0YhEPOZQj6jg0eXiXlj
mgGjulcu4kp4lRI+c2hIoVYrR0bAHFeB7bBaMTysGBqSKxR98qsgJ1cNDMhl
vVJpF/BApVKmGpSrQQbQjhqMesO4wWDSGU0ak1lvd5r9QXco5IlNBK9W0LMy
E16dsk97Bx9uRh5uxFdjjq1p3+584O3Drbfnu4/2Vo9X5pbjwc2lqYDbphyQ
NzU1sauq8VgcsgxZkFOYmZbJZrFIRGJrM49agedUkoF2qJgyiaC5qY6Vm5mE
RhTRyEQmtTI/p+Dm9aTb129npWYUZuVm3L5z64cfM27dACxQxXkUNLyKjCYj
IdDM2xk3v0u/9WN+alLBVUL77s5P/8y69QMNBa0mlMOzbiNy79SSrlyuPC+F
giwuzbubfxekheS0G98DmkhIDoNQVsus0AxLzWPDZuOQ2653WDQghhk0/dqR
PpsJDHqj364Hg8ZpVjtBZnMZIz4zEE4ibI/6LR67zjI26HMaJoI2EKfDTr1V
JxvsbhLzGB1NNH4dSdJWp5YLx0elSkmjuIkuba0CF//IqGpUO6jVDwNbAxcw
GOhOh9XncQd8/kgwHA9PBL0Bl9M2Pm4E5uN02fx+Xyw6MTExGZiIB2NhAMXl
cfhDvmgiOjUVm52NT0/FNlZm1+dDizH98+OJnWlz1CSPWgfnA4bnR4sv7q0c
rcQe7C1cnGzNRNwtDRwiDpOfV5iWnpOekZeVWXA3JfN20t1bt5JSU++yq6oU
sn4KDk/FoeqYxBoGgUGqAOqgkdA1LHJ5CaS0EMqm0wf7e4Nu23wiuLU4ub86
u7s0NRtwha0GEA8FdfQaMpLHpogbOXVUYll+RmFaUu6dG2ClXvsu5ad/5d25
SUFC6ugoYGvluak0JIRdUU6E51ZioMD9ijNvl+ZlZt6+fvf6d7D8VAoW0tJQ
adDIwYh3WEaAWYEdvUauGZXZrSNXorDrgJvZx4dcdq3PORZyj09+1c5E0ArG
kG18KOQ3T4Qc02HXdMjuMCgUIq60raqjgdpcTRA00Hs760ZkbfLOOiCcnham
2TJmt5stljGn0+bxuvz+YCQSm5meXVlaXV5c21jf3ts63N7c21jbWFxaXFpa
Wl1dW1vb3N7e3z+4t7t/vLt3sLW5ubS0vLiyurS6vra6srG+uru9erA5c7Qa
fnO6uOTX2Ac7Zjya7Vnnb5dbj/Zn9hZDh6vxlalAf1cLg4gh4zAIOLwCRDhO
A7uay2CwMWhCaSmyuBhaXl5OoVBEneJKKo1SgWXTK/CoEnhhYW0lmNKIehZx
pK/j3vr0l9dn/3734MXp8vlu/PFe/GQtsDfv3J11Hsx7DxZ80x6NSSls49Cq
8Ki2GnZHY3UtowJTkp+XcjP/7q3Un7+9/cN/FaffoqKKasgoKqIYnn0HD82h
IYuoyEIsLBtRlFGYfrssP7MoIxnMrLKidHpFWTO30jY2DNThsmlBDBtR9YAu
YwfTxK4FdEADddk0X+OZLuIdB9oBdGIBM2DntIyE/ZYrOhHXVNjuHFMMdNVL
WpidTfRWLqWljtzeyBDyWJ2N9HYQ4ZrpExPxWGwiFo1NTk4tzC8uLqwtL21u
buzv7d472L93dHD//r3zk3sPDw9PDvaPwTo+Pj04vH90fHZy//z09PHp/Uf3
js8OD+/vHJxs7x0eHR6dHO0f7iw+2J98dTK15FW7VO2nK2Fgbq/O5s42w+tT
9s0Z385CTDvQLe8SmDUjYY8nHok67G6jwdzd01/JrEGj8AX5kFSgpdxcAoFE
p7HquY2VVAqyFFqcn80C1RRZ3tVctzXtP99KrMXGx/tbh9o5pn6+SdbsHRUm
rP3rEf3etHl/ynQ0bz+csy/6dT6jQiniNzJIbCJKUFfZXsdkkzBoSB4kMyXt
+g+3f/gHujiDgYFVE5Dk8iJYVnJJZhKprICJg6GKM9HQnPzUWzhYIaIouzD9
1pWCcPDmWrrTPBpwjwFAmiHp0ECX5WvN9Nm0UxGHx66xgo8OfdhjAqoB8omH
zCBXg0kE6EQCIMXZQy69WdcnE9W2conNNRXNHEJbA6OFQxPUM/gcEpeBbKxE
zc0uTU/NTyZmZ6YXlpfW19Z219cPtrePDw9Pj47Ojr9SuHfvwcHByd7BPUDh
8Oj03slDcOT+2eN7pxcnp+fge/aOTneP7u8dHx8e7x3trTw8mD3b8u4k1Hox
YyOgOZp3PNjyna56juad25PO4+W4SSnt5nMNA32jctkAaE1tgm6RhNfUwq1r
YjFrMOgKQOdOyt38goKyMhSLyenrVVSxWEV5BTQCmYCEi5qqFkNmv75P2khp
psA72SSVoE7awFC0VBt7W7TdTe4RiUctmrTINsLarah+d3J8LTrm1fcOSxqF
9ZVsQlkDHd/KAY6HQxXlFqQmpd/6IfX6N3h4HouAqCGjAabyvNTCuzcoiEIq
EoIrya2AF5Tmp+PhBTh4flHm7eLsOzR8mbCl1u8wADpGrUIlFxn1Cpd5JOg0
zERdAdeYdVzttmkDLkMsYJkM2yK+sagf0NEFPOaAexz0U9B6TJrennZOFQle
SYBxGGgQY1pq6YL6Sj6HzGVimATIzMzC9PR8YnJ2cmoO7M/NL88vrK6sbq1v
bG9sbm9u723u7m+DtbO7vbu3tb0HrGz34HDv8Hj/6N7+vdPDe/cPjo52gWhO
To5P9o4Plk93J++vuFbDKtdgrX+4+fGK63TJerpivb/o2I6b96a9/S21LGxZ
X1uTXiFVy7qVUkmfqFOtUICy1dvT08pvbWtp59bWoxCowsKi5uYWTm0joFNT
Xc2ksUgYAr+2Mmwf7G+lt1QihByyuI4x0FHf11I9JG4Sc+kcPLQaD+EzUeJa
orKFNSRgDTSTLX31Yb142qEIGiXKjlppc9XX6Q+vp+OBlIAiijNuZ9z6Pu3G
t0xCeT2TUMfAV5PQ5PJiICI2AQEWE1cGqi6pvIiOgVPQUGB3ZYXpbCq6g18T
cBnNRtWwUqIb7QUdx2/XLST8Ya/ZZlZ7rgL2aMhjiPhM0cA4wOR16iMBe9hn
9buNLsuIUd0n7+LVVeJraJhqGoZbWdHIAr8dW0vH1tCQZHRBKBLyB32+gDcQ
8gdCgWA4CI6Eo+EgWLFweCISm4oDdNOzU7Pz4AsAnJ9dmp9fWVhYXVhaW1nb
AHMIWOHa7vba4c7Cva3Y4YJ5b2LUM8gfaqUue1SXm+4nG44Hy9atCeNS0NDL
r5K21sXc5rmIJ+gwxv22lenYxsK0UT3Y3y1W9PV2trUxaHQ6hcqqZCARZRV4
ApFI6wYAhSJBC5+KQyu7W4T1pLYqXBMNy8LAwUmjoIopqKKSzFu5ST8x0BAu
pZyBzGWhCkU1ZGVL1YiApeus0nZUjkvrgjqRVdmhbOfI22oaaGgQ1TrrWRwK
prQgA6y81Bv5qderKejmaiqLiGRWIDFF2cj8dFCLSnNSqAhIBSyPWFpAx8II
iCLgeCRUMYNY3ituBlNGPditG5U6zUNht2l5KhQLWB3Wq0Tttqh9Dk3Ub4oF
xieClpB3PBH1TITdfrcJCM2glg31CTuba5qqqcAqG6pI1WRkNQXJwMPImGI8
Ik8/NmIwjeqMao1+SKMf1hlGwDKatRrDyIherTGO6sZ1JqvRCrq/y+ryub0h
kOQC4VgwAmJzPDS/OLW+Ore5Or8yF9me9xzOWdd8Cp+yUcwodw90XG6EDqcM
92aMuzHdlHNQ0V6dcOvv7yw8Ot56+mDv5cXhs4d7pztLB2uz+2tzkyGP1ahT
9vUKeDwcClUOh8GgxXQag05jcjjcLnEXvwGcyBJeNYFDhNPKiiGpyRQUHEwB
UGFAPE7+4V/leZmogqyS9NtVGDgDCalEFbez8KoWlrWXF1KLvao2LcDUVWfs
4/c00iX1NDYehi/JYRORNCwcV1pYkns3+cd/wHJT6pnEOgaBji2jIUvQBZno
wkwWrhRZkAbKER0DIcDzSIjiirKCivICEgZSzcBq1b1fQ3UPqJlRz/jSZHAi
aHdZNV6Hzm0ZCbr18ZBlKmoHwSDkM8dCYAa5Q16L16YbG1HoVH0iPlfQwObV
MdgUJB0HpWIhJFQhEVWILc2Ry6WKgT7Q+sGS9ff090tBrwEH/7+P8t4BlWJw
UKlWD+kMOpN53Oa0u9wun9cTDPoiYd/UVGhhPj4Z9S3GrfeWLJs+la23QcQq
t8kaX+3GHq96L9ZDjzYm9qcD6xPes/Xp46XY/lxwa8p7bzV+sp44XI5sTXt2
5vyLMVvcY4z7rMYhZbcA/GFZmPJSOLSESqF3dopaeK3dQhGHQW2qopEQUAoa
BnIUFQOGQ3JG0o3M5Ju3fvxXYeadktxUML6LMgCsn0DEKsoAyflnQkkOj44Z
FLCnLbJJU7epl6uT1Oq6G4QcYnsNiVIOZn0GBV2Ch+XBc1LA99+99i98aT7w
/2oKqopQDkICIj+dhirhUNAUZFElDkpCfL11QEBg4LlEVDEZC21rZJk0crVK
CLQT8ZjnJwIxn81pHnE5NG77aNhnmom5EiF7LGIP+MfDXhOI03G/w+8wgciv
G+4Xt9W3NbBqaCgqtriiPJeAzCWg8vDI3HJoOqj/vdKurq4OSbdQ0i36+1Zn
d7cQ1M8eqVjaK+nt7QHNVKmUD6tBJ9JeAbJZQP3x+1yJeCgW9kT8jpmo42jF
szmhdvVzteIq35jk0V7k6b3Jx0eTLx9v/vbm4Zc/Xv7vP57+9cuj90+PXtxb
PlwIzPkMUYtqOWQOGBUBk3LKa4y7jXGQP0MOlVTIJGKwZSW5memlJXAGrbK/
V6YfHeWA9EbAlhfmwvIySKjS0oLs7JTbuakpqTevpd26Ds3LSEv68daP/7z2
7T9++K///Pmb/8xLSyrISE7+4b8wRRm0suzeRmLYIJ4w9Wi7OIMC1rCovomG
rAOkc+5goTl0dAkK+Ft+GhhAuSk/A39rYhPJKAibjMKU5KAg2WAkcSvx4Nqm
42DQ7DvA+qhYGAjYFGwJWDJxs07dbTEOBF1jsxP+iNfqsoy6HVq3UxMNmObi
bgBoKu72e8dArp4K2if81rDHDK7FQYWotbmKTUfTiTASpghfnl+ByMcj89Cl
OYiSrL8fBIiEgvZ2fntHS2dH69/30wAdae8VnZ4esLqAjgaUsiG1ymDUjZsN
dpvJ67FGIu5YyL0Qc29OmdfCwz51i1XKWfEqQZS92I1eHk2/ebT56fXp/37/
/N+/PXv3bP/p6dKDncTj3cS9Jf/xgj9mUsj5LNtg15Coqa2aMihps2rkwKgN
w9KWWgYZU1oKKUCXlxHw+DZ+i8fh4HM51RRSaT6gk0XHY+B5OXlpd7PvJGcn
J+XdvZOXejvpx2+Sfvr25vff3vzphxvff3Pj+/9Ku/VzaWE2GpLLQBWxMPmi
Wpxd0RLQiNWd1bJmuryV3UTH1BDLc5N/ADOlApaPKMwsLUgD+Q0Ly21ikzk0
LA0LYxERIFQDQTHw8BoqqoqEYBFR0OxkJglBRBcDumCnsZqsG+oe18s9Vk0i
5AQl1G0FwtH6PYZExLY45V2Y9M4mvAHPFZ2E3xr1joU9RrNhQNHX3lBLJWCh
FAIc+AK1opxaUUbFl1aSkbWVhL8fBwg72zraW9oF/M7ONkAHHOyX9ciBy8l6
gHa6e8TA6JSq/sEhuU4/YjJpLSaN32OejHvnYr71uGMzOpQwtdt6ufN22Vpg
8NVh4sPF+u9PNn672H5ztna5P3O2GtmddezO2hf8IzYl36PujJsV9+Z9G3Gr
SdGmkfJB+7u6ww/N4ddXKrpbZR1NVAwMAQGXEJRJJbc2N0pEQmELj4ZFM4kV
qOIiKgZFKC8tzc/LT71bnJlakJack3ITNHoAKDf1zp1rPyf//H3arWvXv/1n
UWYqLCc97861BgaWX4np4mBN0oagRqJqY0kbaUIOqRJViC/JzL71HZj7GGgO
7Moeb2Ql/wSggOpBw5YA+VSUFQI3q6woo+NKQKDi1VBBvgLCAVCQ0KyrOzyV
eGVfm2G0FySxiYDN59CDNuRx6LxOXSJmX5z0XgGa8sdCNpCxo97xmM8UdhtN
WkVPF6+6isRmkUSd/C5RW7e4XdTOEwuaJe1NwhZuf1+PrLcbmBuQD1hioeDv
hziAjkrZr1DI5HKZTNatGOhVqmSjmkG9fmTcpPG4xqZi7pkJ50zAAqrfgrNr
QtsS0QrnnP2bE5oXB5OnK74HG8GH68GzZc9uRJvQi2N6SUDdMWHo8Qy1W+V8
tZDDYyCGxDWBMalR3jY20IWH5t/54Zv0pJ8xsMIaCqaOUUFCwXBlUHoFtrGG
LWxpGe7va2KzqslEChpZRaqgopFoKJgaeWV5GfCc1LK8tIKUGwWptwpSb+ck
38hNvlGQlpR5++eUH7/BQvMzb3xXkpEk4FCkXKKkBmeWNftHu4RsjLAGL6jC
UcpyoZlJBSnXKShoaV46JPPO3Wv/RBZnNLAqmqtJhPJCNhkNrhyQtIGtUTFQ
kLqBsqrISCAcwAUAYpFR4jbOuE5h1g/EQw67ecQyNgj6jtepnQhb5mKu5Sn/
8kwgHrYD7QA6cb815jW7LFqVQtLfJ1YN9GlGhsaMeo1GPSCXKvslCqmwr6tN
0dvdJ+3q65WAAQRU09Up6O0RS6VikA2ubl8PDigH5Ap5H0CjHlFptOAnADTj
03HvZNQ55TeBqj5hEs2aRR4FNz4mmXXLLw8nHuyEH+6EHu2Gz7eC9xYd+5Nj
ix5lRNc9aer3DHbouuq66ykKQU1nHZlUmoWHpFRXlHRyGb1tjaW5GZm3boDo
BM9LI6NKGHhkRTmMgcMKuHV9HR0KcG3VsbkMMlh1NGIjk1qJK6eiYJSyImxR
Bhmejy3MwBVlIHPv4IvSwbY0Kxn8K3jWHWxxNrooszwnhVZe0N9E66rGSLkV
7iGBWdbEp8GkjdRaUikVWZx983tYTgoeXvj3fZv0m98DK/sqHxhoqWDQXD3L
pmFxoLQSETVUDK+WBoIBDQe6JAJXVlBDw2pUEotBGfSanLZR29iwa3zEZf2a
CiL2lUkfkE8i6vA7DRN+y2zUMz/hm5nwRYOOeNQf9nvjkXAo4APpSyoRCnj1
nW313WK+sr+3r6cLoJH8/ehTIuoWdfRJJV8fE3y9R628ukkNSGk0V2jGx3UT
UW887IwHrWsTjjm3fNoqskhrLD21Aa3gxVHizdncMwBo1X00b5kHUEzSoKlv
fLB9WFIr4uJbWYh2Nk7AxnMq4DREEQMFI8KLsm5+l3/nJxoK0lhJKE5PhmTc
LckBxbyYQyVUEbA1JAKXTpO2tmnlUqmgsZFJbq2pbOMwJTyOtJXbUVfJZ1bU
4OF1pDI2BtJILmskl3KwRTWYQhIko6IwHZWbQoBkszEwelkhKvt2Ty1JyEK2
V8KldRjbAG9QUNlIhPS31VSTkIi8tLRr36CKc5BFOSXZqRk3fygtSKln4VtA
vEYUcplEEAPwZflMIgKoiYEv5TIJwNlgealsCoaILAZ1splDNRuUwNAAHbNB
5RhTu2wjoI1OBa0LE+7ZqCMWNAfc+pmoc27COz/hnY66phPe9eWpjdX51YVZ
v9el12n6e7s7Whrbmjmd7Vx5b/fXdznEEnFHZ3sLIKWQSftBqO6X/v0eyPCQ
cnhQMaTq12qGx8a04RBoPPawx7Qy7d+MmqYsXTYF26WsX/Eonm37Xh9ENoJD
gSG+voMhpEOa8LkMWBoy+3bJ3VvQ7CRkcTqmJAtdnI6DZmGLM0BARRdkgYaC
heQWpt5Mu/4tviS/qqIcWZBJQsIZOFQTi9ZeXyPk1nQ3N8g72kalIpdWJWtt
6G7mKIU8eXvTaE+7XiYclfAVrdWiaqK4mgCMa7CFKWugdLJQTYQSNiKHVpKO
zUuuLM+rxkLxBXdbGYheLlFAKxFXlg7yKHoJp4UKa2NhungsMqKoOONO1u3r
GFgBmD7lhRk5KT8xKkr5tbRqKgbMnUY2pZJQDjQCwjbwPSCd9oZK4G8EZBGo
pVQcrKmGImzluG0aq2kQqMZhGnZZQd8xxANmIJ+psC3iHfM6NJNRx/y0f2k2
lIg4wXU+Hfctz0/MTAJDNKnVit4eoRBchHWVnYJ6WQ9I04IeUYe4va1b+Hda
E//99tSIWjXy9dGPDowbzSDIAy63ze93u+1jAP1i1L7gUMR0Hebe6ll791Z0
6P6MMTDYoOskaUX0wRaKqoXeXUfgkkvJ8ILiuym3vv3mu//5HyBHZSb/XJJ3
tzDtRmlucnn+XeA5wPCRhZkYSC48K4VDQIJFQUCr8KhaMraeVtHVWKPs4JkG
ejxalU87NOUwebWDanGboU80rpDYBnscgxL3kMTW327ra7XLWkH39Cg71G0s
WS1eUoVuo5WxyrIrCu7waEgiJJVQdBvEaT6hUFqN7Kos1YvYfQ2E2oqi/rZq
USOTiIRmJl8vzLgD+ikiP60g9SayOBNkAD4HKDuLTUJxqLhaOq6eiScjCzCQ
jEYmnl9DZpLKGEQ4k4ysY1Z0NrOH5KD4qD02jds6CrZBt3EiYJ4MWcEKufVu
x2g0ZJud8q8uTSzNRpamw9MTvsXZ2ETUY/j6xFrQWtfSXN3cWKUe7JNJJV2i
dvHXN6C6/k9aA0NnSKXQa9VgTI0ZtWMGsB112Me9Pmck5J0IOVenA4thy6RJ
ahSzdCJGVN++GQKSaXYruNPjXb7hFkUTWd7MaKWjanAQJhYGBkpuSlJm8o3b
P//r5vf/CRIRoigzN/lHUMDRhRnIgvTS7DsV0FwKiEbQ7EYKqrWK1FFDE9Yy
5G0NgIJPp0rYxma9tgW/fd5n35kMz7jMCZtx1m0Ga9FnXnAbZ4DDa/rjhoEZ
82DcKLdIm7XtVQON5P56cgsVzkZm1xMgVaDiZfwoayL3VKOFtJIeNqKfix/v
a+BWFAqq8QphAxguiOLcuze+LysADRQKag5IzlRMCaBTBayvKINbSagiXYVq
kNzQxZk4kAroOCapvIqCYoP2SkG11Vf2iZqNGpnLPALQeOzaiM8UD1qmwoCO
JejWeR2jILnNTQUXZ8Lzk76l6cDybGh5IT47FbVZ9WJxC6+phtdY3dPV5rKb
wMQBDfTqDaivc6cPeJqiVzHQNzSk0OrU41fv1Vy9v+F220Jhn9cLRphve3Vy
Y8a7OWlbcCnt8gbvEH8zpI4bxFFth7O/vrumrB6fLaCXV5UXwFN+yrr+r7Sf
/5mT/DMkKzUn5VZa0s8p168eNZZkX73OBMu8RYBmYwrSyPAcKjyvGlPcUYXv
bWCMips03TxDn8AxJI2YhmecY+sRz1rMuxrz7s3GdqYiu1OR4/nE5kTgYCZ2
PD9xMB3aCDr3Jny7Ufd22D5pHvYNdwWHRUZR7WgbU9FAElehuPi8RmIROvta
CwWmaCS1EguAfESVsGEBHfCqI0AGhNzutjoyuqQgPakw7TYKBInCDBIS0lrH
UPUIxHxORVkB6Ke1dDwgBWIbCJbw3Ltgv4qMAnZHrygFdBrYpPamqv4u/pim
H9DxO3UTgfGZqH1+0pkIjQfd+oBLHw1a56bCCzPhmYRnasI+k3AvzkTnpmJ+
n6O3TyhorW/lcUeGFF6X9e/32f5+S+3qvkGfBKBRDcqH1UqDUWOzjzucFiCZ
iXg4MRkNh70ri/HZqH3Gp512Kq39DSo+0TfcOmXqnrXI+mrRjZhscVWZuAbF
RuTh81JhqbcIsBwyshgoJSv5RtIP/7r+zX/evfZ96rVvilJv4KFZqLxkWmku
0BcoPN215CEBRy9usPe3GbqbjL18m6Jz0jKyFXMfzUWP5mLnmwuXR1uX+xtX
a3f9yc7q052187WFk6Xpw7n4w9X5+0szD1amD6dD60H7ise4YFOHR7qDg0KT
mKNupXfXoLo52KqyTGbJ3b5abAe1uJNWLOUgRFWlIx3M+oqCZnq5uretvRF0
zZKMmz8hi7JhuWnQnBQQ1UC54XOo9ZUV5Xmp1WQUiNbgSBsQUnkhcDwACHQi
gIaMgdbQsZ28akkbVzfYbTMOhjzGqM84F3csTrlnJ+xR31jEPwbozCSCS3PR
hZnA5IRjcsKZiPliIa/dOtbXJ+4QNA/099jMhljYB7I06KsDCtnfb4QODFy9
OTAyOqjTjYyZdACNz++KRkOJxEQ8EV1amtlYSkwHxzYmxoPazgEe0dDFXvEM
LruUsjpMO6VY2QjaBJpPg9PgWcW3f6KUXj3AKky/dfP7f1z/7h9JP31z56fv
spKuQdOT4Ok38IV3WYjcegK0swojqyePCNi6ztpxSbN7oDM42rPg0uwl3Mez
IaCLo/noydLks8Oty8PtZ8d7b8+Of3148vJ4/3J3C6wnu5tPdjcu97af7u88
29s6XZk9XZ4CjA4S3g3f2JxZGRzsdPQ1qZrIbWRoHSqHVnhTxIDL69BtpNye
6vIWUkF3NVJYVc7G5HbxKtubWN3tDYRySElOWkU5pLwoE12STUFDrjIAwAHP
RxdnAQe8CtU0DBhJZflpuJIcDhUD5FPLwANGLVyGtLMR+Nu4Ru61jYQ9utk4
KKRuwOjK3yIOsK6cbTa6NB+dnQ7EJ3xej9UBCpKyr7unvb+va9wIyr59ZjIK
uAwNKkEwA1uwABe9YRRwMVuMFuuY22OPJyLTM4nJqcTS8vzW1vLSTGgpZpn3
DurEjKE2StzcvR4Y1gsrgYf31qDFzLKuGhwTkVtw6xsBm9RZx4Dnpvz0X/9x
7Zt/pt766fbP3+beTcq7cx2dn1ZZnluHK+hkIoYFTKOYMybmuOUtYXXXjEm5
5NCs+k1H0777C9GzlcmH67NP9lafHW68fXD85sH9P55e/HZx/tvFo18fPXr7
4MG7h2Cdvnv04O3Dhy/vnzy/d3S5v3m+uXS2One6NHWQ8K2BQGuQBVUd2jaW
hInupJfSim62EPN7q8vbiLkCckEroaCDCunhoOhlqXw2trOZVUVBN7JpiOI8
EN7g+WlYeB7QCIeK4leT+WwKNPP213tuFdiyPJCoiYirZ6lMLLypisitxDEq
4FwWXi7h9Qob9EPdFn1/1KefCpvnYtbZmG06ap+6es3APQ9O40J8dWVmbh5c
9yGHw6zXDff0tIM1pOqzmLSJWHAi6lMPD46oh0dHhkdH1TqdZsykN1vGrh4W
uO0erwPMmtnZyZnZqdWN1bX15fXVudm4eyFiipokkmrYcAfFo26J6UXKJnwH
DSJmlUs52GpkDiz1x7H+jl5edX7y93d+/MftH75N+vHHuzd/Sr35Y9bta4i8
dEpJTmMFVFqD1XYyHf1NkRHhkn1gzTW07dcfJxxHcef5avxsMXaxNfdsb/nl
8eark53Xp3sv7x/8/uTRx+dPPzx7+uHFsw/Pn79/+uz3p5e/Xz5+9/j89fn5
u4uL56cnL0+Pnx1tX+yuXuysPlyZPp70bXmNIZXI2tUgryN0sRAN6Kya0hQp
u1xIK24h5PLxeS2EfBkXW43OopZnCpsq65iEKjKWhCrFlRaVFWWhoblg4lRW
wJvZBGEDkw5CTn4qh44jY0oqieUgFYAJBQIeQAOyHIeGrqVjWuvpAz0tgNHY
SI/PMTwdBXQsM1HrTNQB6EzFXLNTgcWF+Mbm8sLi3EQ8CjxqVKOSSjsVColR
P+R2jIP5HvTZtdpRg0Gn12uNJsO4xWSzWt1ulz/oC0WCoWhocjoxMzuzur6+
trkBtLOzMTcXtS0EDTpJtaIZ5xpuTpjEQXWbkFHSy8XxKRAesZgGua2RcPt4
Vbk3v89O+iE7+aeMpJ+zk2/lpSbnJF9D5t1llOcKaPD+Oryxkx1Stk7pRYvm
3r2w7jhhOZ113Z92P5gPXK4lXu0tvNxbfHW4+vre5uuTnVcnu79fnn16dfnp
1bPPr19+effm85vX7188/+35s/fPX/x6+fS3p08BndfnD4GOgMRe3Nt7dbxz
ubv6cG36eNo/Y1Z55C26dmYPG1OPyqmGpwK9SKrKGjFZjZicBnRGbx2qjQ6l
wO621RA6G1hsCpZNwUNyUxFF2fDcdBKyhIAoaq4ht1YT+dUVaGgGBprXzKaR
0RBuJRaEOlhOKhqaxashg8WmIEE26OloUPYI1AqhzSifSzhmJixTMctk5OpB
z2TMOTvpB1jWVheXlhZjsZjZYlIOyUVd7UNDcrvFMBn1xiIuj8cCuJgt4+OW
MbN13O60ud3uQCgYiYXjkxMAzfTM5Orq8sbmJkC8sbawOheeC5vjduWggKYT
M51DjStepaO/QdFYAf7XqpCpfDJkWFAp5zNwBaklaUmgPIA8AMlORUEKU378
piTjdjUOIqzGjAgqLT21wcG2Ka14wzlwEjedTdvPZl3ni4Enq9HLjcTb/aU3
+8tvDlbeHq+/PFx/fX/3/cX9Ty8ef3799MvrF59fv/ry9i1YH169/PD61cdX
bz+8fP3++fMPL1/+8uTil8eP3j08f/fw/tvTw5dARNuLJ/PhVa8+PCI0i2sG
m6kdVFgdIqOm9C6YPvWozKuFzpCwy/rqcSTIbQ4ROiBuriQggHxwZcXlhVmo
4jx8aTEBBammoYUN9PY6CqMCVpRxm44rZRLKWCQ4yNIgQpQXptFxJS211Boq
qhp4Yw15SNap6hWYNH2JsHlmwj6XcE7H7JMR21TUOT8VmJ+OrC7NgQsfVB27
0zqgkkmkQvWIymE1xoJOv9fi8VpMJqPFZgZcHE671+/xh4LReGxiOjE1NzU1
PbG6evVU+uqR9XRsfSmxMOFaCI25RjpljbgxKSeo71j1DfoGWzroUGbpnRpM
5lAbY1RY00CGVxRlVBTnYIqyKnGlVEx56s8/5t3+iY0t6WRjVXzKuKTGr+Qt
Wfu2fcPHE8aLJc/lauDZevTl9tSr/flXBwsvduZfHyy/Olh5fbT+y+n+rw8P
P1yc/n5x+uHZk8+vXvz55vVf7979+e7dX7/88untm4+v37x//vL3Zy9+e/r8
7ePH7y8vfzl/9Pbhg9en914e7z3bX3+wHN8JWebNAz45X9/O7OOggZXVlqXy
8HmglrJL07iorBZSvqwBx0KkMxDZ4iaGpLUOCy9kUbAEBLQ0LwNfVkTEQPHl
+dJWTnstBegFDc0Gaa2agmIS4CCw4UuvnuKVFaQ1VpEaq4g0HLSuEtfTwR0b
6dUNSvx2zcKUZ3HaOxt3gUgA6MxMuKfjvqX5qaXF+cnJBKCjHJT39Xer1QMu
21gQoHGOBQMOi81mdzicbhcQkj8YDEajkfhEYmY6mojNL85ubK7EY+FENDAF
usZ0cDZkWo4YjX1cVSvFOyKIjnXtRLXaDnojLpsKudFVi9YK2Z0sFBtTyMGX
0koLGShoC5uKKsrJvHkNW5DKoyOULTS9iBkdESxZpHtB9YMpy8Wi9/lG+NV2
/N3+3O/313492fj1/uZvp9u/n+38drr7x6OjT5f3/7g4+ePx/Q9PH35++ewr
nTd/vX371y+/fnn7Dujl0+u3H1+9+fT6HQD0y5PLD8+ef3j67LfHj399/Ojt
2cnLo50Hy1NHCfeGWxNRtdu6aoeaiJ2UYh4uB6iGX1HEKL7LReXUY7KkdZh6
fB6p5A6fhZZ1NvJrK4loGJOIIpQXoaA5FahiFDy7loYGgNo4ZAYGCsu5Q8fB
WMSyq6eoJAQSkgkAgfjdXE0GM6iKVN5WTzcM96jlneMa2dyEa2naD6b2dMw1
l/CCHpqIuuMxfyIRjcUiWu1In6wb1Bn1sNxl0wc8ZgBoairsdHm9/qDL5/cE
gWwmYlNXk2ZianphZXlre3NqKh4N+0MeEAgDywnP6oRt1jOsaCGN93Ejxq4p
W+9mcKSXg6zHZlaVp2i7qtuoEB4FxkIXtjErmKji9mpyAw0Ly7wLTb/DQhaC
ijrSynDJ6hctPfsh9f2E6fGi5+lq8PXO5LuD+d9P1n4/3fr9bOuPh3sfzg8/
X558vDj58vQM0Pn09OzjxdmnZ+dfXj4FqeDPV68AoH8D+QB/ewO4gBn0DqwP
L1/9/hSg+UrnAkS7x7+cn7083n2yuXAU92z59HPGPo+sydjOVNbhWiryWNDb
gAsbnsmEpfGIRQIqtJ1RQocnc0nQrpbq7vZ6btXVTc4aKhZfXkjEQPCIq1c+
xE1VgjpqQyWGWJaLh+fQcXAatoTPoRCQRRXlheVFGQw8vLmaCFJEA6tC2sG1
GhRWvWIyZF2aCU5FXTMTQD52wGgm4YuF3ZGID2QwpapfJpfK+nuMerXfNT4R
BA3Iu7o6G0vMTM4uTM0uzswvzy6uLq5uLq1tLq9v7R4cLq+sLC8vzM9NLs7G
d1ZnthfCW9NOi5In5xM9w60Tpp6V4PC8o7+Xg6pFpXXXotqZ8FZqcQ06p44A
a2NVNFIQojpya1VFcerNipKCGixUWIUZE1dP6cQbLsXZ9PjjRffT1dDrncS7
/dnf761+eLjz4Xzvw6P99+cHHx6ffL7icvrp8uxq58np58sHHy8f/PHk7PPz
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
neLu7u6WYMEJDjHiCQlxIUo8xI0Y7taWUkq93fLs55zPzPcv+S72c2bWZDKU
Hzpcua7367pz32ut/Wt38+/93f89fPuvd3tg/b2/89fu+h/rC99XXJ9BEs7q
Dx26faf+87L7j+3lf7/Z+uuf7Sj//REQ9Zf/9+3r//v08evW5munY9dsWlJr
XWK5X6FZ1hnsU+JZqXjXaTqcAynq+7ri/7oy92V57vvaEnj9tOA58ruOfPZ3
Nv2uXrql5i+LqD72uJ0yPD3cxO2uIDfmjtdn0brK6X1VyOZ8OPjwp0UUxjwe
hGSxUS24zoq6jODK5OfD0CzueIuE3N1SFFOXFYHurBxuKYQWxrZVpPRB83Dw
ekxv7XBbWV9LaV1RUmFKCGCAnPig3PjAhoLE1sp0AAllqaHQoqS+5mLsSKtd
OOqWjPqm0eum45pjFhxfBGAM1UoJXXr2mIY5YhSirTK8R0t3KsjAOy4lFZQj
oI6GMQRIgNJbBtTho6BAHeE4bKTxWJ2KjEhIUXJW1JPWksSeyrTs0EcVKZHw
iuypYZhtYnRVMvFmZmrfJH5vEX+eVX3xzvyYt/6+MvvXxtz/AC9srv69t/nv
t9t/v93+97udfx/s/vV686/tlb82Fn+uAQWdH92Gfav6yGv+vOT6Y3Phf1+v
/Xtv5e/Xa3+/2/kfYKKDvX+/3jryOfZM2nWNzC8VWLlMj1y2abEs6Q1mvmDN
qP0w5zoCBWreeeS3f132fFn0fF4EvOH+4LUdea37Vs22Tryl4q1K6T4u1koZ
VI60CHtqGLBSTE3mSEUqqb2E0lM5Cs1pLUwAEzY74klvbebkKBTVWlSV8rI0
/nF3ZSIDAVVMDnRXJddlhaK7yhFtJcBKLaVJHVXphP768d4aVG/tWHdtD7S4
qSKrIic+PzksK+ZFaUYEpDixsSipNCWoJjuioy7bK8d4pYglDWHLygKcfPzd
H60HtH41fVDHHrVKcGDo6AXIeSML4MGmU+JQUBaNnEU9S88e1bGGJgdryd1l
MnwbyEMJoRPZWgLNj2/Ij6/OiU18dReSF91Wkvzy5rnChLDuknQ2HOKgj65J
qdtq9r5R+N4sPLSKP7nU3/3Gn4v2v9Z9f6zP/bW1/Pfe+r+O19qfe+vHk2Vv
4+9j1ZZ+X/P8vj77Zc66b9P++OfJ0K+Lzt9XZ/+17vprHYjr+3Nz/sfSLMi9
HY1oXki3McZnqCg1GekUMTdMOkBxdrHEp5Aezc8CMvw0b/+0YAevRz4LaLWH
XvPBrOGdQ//GotqbkW1rBGtyhp+Hs00Ma1Htkv4GdkcFrj5noCQRXpJ4fCRZ
T3l3ZUppYnB+dHBO5JPW0jjGKATTXtyQFVqZ/LK5IBoQgoLePwDJqEh7OdJS
MNSU11QU21qeAC2MGW0tRnVXEkebCSOtiB5IR0NxSUZ0VmxQWsTjktQQ8Ner
z4mqy4loKk30K3Bg7qybGPNKgm6yR02DTwzU4LrLNKxhowjl1pB1fKRLQVoy
sXUC1Mas1K6gzhk4yyDfuGMA6njoFuAdGbHdIhiTkruBOpWZUY15CdCcpITA
ez0VyWXxQdfPnEoOfdpWkEhtqzCS+hYEuE3F5Bs978AkPLLLPru133ymH/O2
31fcf20u/Lm58C+gxe7q79vLYKb8683Ov/Y2gVh/bi38ue4DAn3wWg9mTX+u
ez7Mqg5t0rczggMT79A69WVW9dNnPLQqN5VcL5ekx/UZiQMawoB5Eu0RUlbV
/FWd3CWZ8sjF+x478M7HBfsRIECv5dChf2fV7Ns0Bw79WwB1RsXejHxNyVub
Zs8LyE4GUoVqFw81gHDDQ3KGShPbc6KasyNGG7LwXaXtZYmZYY8jA25HPLnT
WBRFHalDtZfUZ0YURT+tTgkCbhIRO8e7ihtyQuC16fCa9Nai2J7qlMbCSDg0
q68xZ7yvZrSzAgWvBz6qzk/MiHmRnxxSmRVdkx3dkB9XkRGxpKXMqwiLWuoM
q8/MGTCwh6j9NVx0K5g1Fuk4WHY50SUn+vV0DQ+xdrzZFGtuhrPpEJkEKJPg
+J4cEpCSDndKMCJCB7K1FPTlxvyEuozY5OAHY035cY9v3zx/PiTgVmN2DKGp
SIPp9HPRa3Lano77zigA6nyZ1X7x6L/NmUG4/bnpBwL9vbvy184yEAjo8ufu
xh/bqz83Fv7aWvhjwwdGz4HHfOS3/bXp+Tir2Jie2JCQd5X0PQ1za5q2p2Gv
yWhzfNLs5PgMYYTYXIWoLqS1V6tRXS4Gysujaik4l0T41g3Umf244PgASpPb
8M6qOpoFDXcGjDNgnNfG6R2dZF3JXRLT/VzSLBNtIMBlo02cnkpiYz5Itu7i
hCbApanBI5BcdFtZV3V2WuiTF7cuxzy/XZUVju4sx3aVQrJDKpKe1aQF9Van
kvoqaEN1iJaCnqpUYLeuisSuqsTO6uSuuvSe+kxkV8VYVxUa3oCG17dUZmXG
PE8JeVCU+AoI1FySBpJty8Je0tPM/BGXGAnU0TCH9FyETYrX8kZscpxDTvJp
aB4NVUDsXDTzPTrmql28bptySEAhRfPRLZNDdfYpjF2EkRC7xtvLKtJCmwoS
a9OjAbP1N+QFXD59/9q1x7cuVyaHImqypSNNs4zRFRl1W8s+MAPvSD+5lJ9n
NcfT5/hZ3dk/1n1/7yz9a3vp7+3lv7dXwcQBLPfX1uL3pdnjx6433O/chk9z
1j/XHF88ind69hIHY0B3ueljr1WTa2LiggA7x8WZicMdmQnhV84Hnf6lJS5I
2FGpR7RbiSMyRP+iRvl+zv1p2ftp0Qky7f1/njC1q97aVPtW5WuTfEcn2tIK
1hWsRUAFfIJzEmkmDyqQMEZHKVBnrCqjsyChMSu6Pi28Ojmktyp7uLG0uza3
IOFV+MPbyUEBxUkvu2oSSX3lHeVx5cmBpYnPm4siuyqTCT1VlP668c5yJKy4
uSi6sSgaVp7QVZM22Fww1FI42FKE7KrC9EP6mktLUkPTwx4WJr4qTQ1zS1H7
HvGykWkTIrX0Xg4SQh2o0bJGfXqGfRrn11HNQoxDRrCIMHoeYtUumlVPbs7K
N+xTXtWETTwuJnYxhhuAUoDMZeRuQndlZWpwdUZkaXxQVVpoQ0HC9dMn7l+7
fufy2dzI54NVmfy+Oht1YFFE2FIx3hi47y3H4fbVrf7q1X+fN/9ccoDs+mvT
//fW/L+25v9nZ+mPNf+fa3N/rs99X3L9XHH9vu7+4DG9d2i/ujVbcqoCXjOQ
8qrgztmalzcdJPi6CDvHHlvi40l1BX05yd1ZKU2xIdzmKiUcMjPWPtFYrsAi
d+3WD/PeA7/rI7DPnO2jz/yPOurXVsVrs+yNRbY7I9rS8DaUrBUpfU5IcjAQ
JmI/CDdWVxW5uQhRndFTkgxaQ0NmTEVCSG740/qs2J7anLbKtPyE0Pz4oLLU
kLzYgMbCaFRH2UhLcX1uZGny89rs0Pq8iLbyxH5INrankjxYN9Jc0F2d1lWd
CqtI6Yfk9TZk9zfmDcFKSaOthIEmSGFiDsjGvFjgl3dzsiUDyzaFVlG7JcR2
Cal7ho+aVU8AdawS9KyC4pTi9dxh0HpW7CKzlLzulO645V41bVZOUkz00Qbq
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
1VGVAsmP7qhKhddnt5UnNxfHt5QklKcGlaWFtZSltVdlddfmt1eCoRNbnxtd
nRVZkxNbcXzfe2RGzMuClNDXbhlIJKvoWAWXnKJhj1nFuGUTZ9XCmVUQp2m9
gNm8aqpZgjGLUC4lxalmHG05d7zKZTPXJSXMaSdlVPjxL0whHBIMdwTSVZZc
lRFRkxP/7PbVX//rv0+cOHX29Jmbl8/fu3Y5JOBOZUo4si4XlDsrqWuOPbwh
Gt9Tkd7qJg6MzEML94NN+MkJEE7x0TX9yaM5cqs++/Tflqzflm0/VpzHRL3q
+rbi+LZi/+TXHc0qjhyyI5v4vV34xswFa3uGsaahLU6TNnSTOwburlG4OSNe
0Uq2zJptm37Hrn8za9p1Grds+tUZ2YZBuqbhA7NsaTmbWg4YN2sKxrqCsSim
eDjjDibKQBmcIcK12G7pWCsbXg+MMw4tRtTl9ZVl9lVkN+fEVCWHAXWe37ly
78qZhJCn2dHPU0MflSSFFCcGZ4Q/Kk8LhZWnVGeFdlSmAb+A+QJ0AeqAZAMA
kBP7rDwzoiwjoqEAeCelqza3sTixJie6NCU0O/Z5dlxgbkJQbmLwvnfaq6Jo
WP1W0fg0tU/FHAZNx6OkrFq4YJQY+AgfYLNpoltNdsjxVinBb+Tvr1rfLupX
rTyPnOhVUIHXFmaYNgnGJcOyhurglWkVaWHFKRFXzp488cuvJ06c/vWXE6dO
nDh/6tTDG5fzY4P7yjNY3RUGXJuH1rc6hdpREt7qqPsztHeGyQMT+6Nj6qND
/NEtPZqd/gBYzqf7tmj5sWr//XjzHOeP1dmvy7avS5bj7T78+uNdC1zKj07Z
kUv23iZ5YxS8NvBfG4V7RuEbq3TPptixKDZMyg2zZtOq23LMbDkMaxbNinF6
dUa6pOItyOlLMuqChLgoJi7LJuYEOA8XvTBF8PHGnRyUlgBXj3fKETDRSCun
r4EMq8A2lSDq84ZqcvurchozI+syooqSIgKun3t290pqxPOsqMe5Mc9BGc8M
fwzUqcuNBWMIkh9TkRYEogyI0lWd3l2T0Q/J7anLqsqJ+edL7aTq3Ni8hMCi
lBBoaUp1dnRHdXZHTU5zeUZzZXYXpHjdwgfqGPljTilBTR/UcEasYuy8njGn
m1QxBkGyAWmWjAwAzFr2sH+GtWyXvlu3vVnQLZvYszKcZWpcxRgCQwoML/c0
XohqbiuKayxITI0MPP3rf/124jfgnd9OnD7x68lff/n1/G+/poa9aC9KITYV
ykcgNmLnPGdoQ4bZVeHfaslv9RPvjMz3JkBx/A+uqaNZ6SeP6osfqGP6vmT5
tmz+umT+OG/8cvze+nXR8tlv+Oyd+eTWffRoPrhU7+2KQ7vywKZ8a1WCavne
bXjjAmYx7Np1QJodu2HFrF4xq+Z0Evc0d1bG9MomnUKClYVwcMacrLFZ1piX
g/JykR4ucl6IszPHtKQ+JaZbMgbjDzbROmtBrI03Fo/V56OgpT2l6cA7Ddlx
BQlhT25eDLx/LSfuVWbEo5LkVxXpEaBLFsS/bMiPy4l+XJ8b1VgY25B3fN0M
GKevIQc4qB+a11qR/p+bD2HV2e21uTX58Z0N+QPNpa3l6XBIUWddbmtVTklG
9JpVACaOQ05wSPAyci8AM6CLGySYnKTjjAJOtohQy0aGjj2gnOz369mLNsm7
NduOT7lm5bllWDtw3EQfIAS/lgq8o6T0wEHS5sXHBD0+c/LXM2fOnPj1xG+/
njzx6+nffj116pdfwh7fb8pPHq3O5PVWG3FtPmb/onBkU455oyXt6yf2DfS3
M/R9A/MNCDq78PPxXuK6b/Mzn33az37t53ndR5/2o0/3ecHwZcH00W/44jMc
ufUHHv07t+6D1/h5zvbBZ37r0h/4LV+XPb+v+r8tuQ891oNZ87tZ8HMjUGrN
IF/STM0pOC4h1crBqohwNQk+Q+mzUAestH4HY9A2OegVYOwshArfIxqDCYdh
nD4otb2KCLzTXIptLkc3lnQUJjXnxjUVJKdFPH96+1Lo41uFicFZEQEV6aFl
qWGxz29UZUWBpMqOCqjOBAUnHFoQA9QBLA3U+Y+P6grjitNCQd8sTgsrB2O6
NDUvMbCuMKE8Myo/6RUwFDBXa1X2rJLm0zPt00QDH6lhjiwa2T4NDTDYMTAL
McBHOs7wqpEpJ7eDKuTVMDY92tdLxv1F3bZDuKghu+V4MbHLq55YmKHbQCdi
DvVXp1ZnRkW+enL29KmzZ06fPXXy9InffgPq/Hbmt//+JeD65er0mIHydBqs
VIVospO75rhDa2LkrgoHIm5rGr+nBRox31k4h/apD3bxV5/6k1v1wSX/6FF8
9ChB3H3yqo+OF5BJ/9GtO97sy6356Jv5Pm/9c8n1fc7+fRFkoOer3/5ap1wQ
sOwTRBsF75okmyk4ywTBwSQ6WEQDBaXEDmqIw8KRNmZfE6WtTDBYr8F3WOj9
Xj5ylot0cTE68qBorF0wBIZOI72nnthWiWksxbdWjtTmAXVa8hKaClKint17
eudyfHBAYWJIfsyz+hyQZkHRT6+Bid9QEJsTHQB0Ae0GeAdoVJYSCNgAzCBQ
QjtqMktSg0GU1ebFFSYHA13AKs2MgNXkQI/pOgFaFN9anelUTCxbhRtO8a5b
tmTgzBuYbhXVr50E6kzT+u1SPBgoPgVBgm2ZYQ3NKmgbs+rdOf2Od3rDwtkw
TdpFKBG+wyhAL5tYRsGonj00WJNemR4ZFfT0wrkz586dOfPbr2dP/Hb611Mn
fwNmOnHtzMnc6KDuklRiYwEoPvrxVi+rf2UKsSFD7yjxuyoiYOwDA/PAzDkw
844cko9O+Xur5MAuPnSKDxxT7x2io392rfzgUYFY+7lo/eYzfbQo9hTcVd7E
IpO8MEnZEvN3p6f8kxMOPNaJx1oxqJmxIc0QXNQDE3a3TjbV4qqKECW5w4VZ
nZmJDfFh2U/uFry6254TMtFRbAYkOU1anqa4+eNa0oAC2ydBdvFHYBPddQRY
JTAOUKe/IquzKBlWmFSbGRt45/Lzu1dz4kNyYl6UJgZVpUfkxb2If3mrtSKt
PD24OOlZfV4E0AUgAZg+5akA5DKbiuJaShPJw9Ca3KhKAAZp4SVpYaUZYQOt
ZVV5cdUFib1NxaCNQosTm8pSloysLccUiCazBKtijSyaeV49Y8Uu9GhpGvYo
MJFbjrOLxpTUTiN3xKWcWHcrN7yaTbdszcJe0pF9SoKc2iOfgAPGs06hLLyR
EWhOdsyL2KAnVy+cuXD+3NlT586cOHP2xOmzINlOgPVb9MuA9qJkdG0mp6tK
jWx20boXecPrYuS2fPy1irAHBFKTXusn31u4B2buOxPnrYkN1hsT+7WRtW/m
vLPy39tFn92qHx7dW61wkUPxk3FeItZHxvvJeB8R78Fh53B4y9Covn9wZmBA
09s5M9Qr72kjVJaOFeR2JyW0Rsc0hEdXB0fWRERXRoT3FGZTO2sn4dVKfOeq
auKtlb81w/ZJSXrasAzTI0Z1cUdaKV01hLZKUnsNsM9AZVZ7cVJ7cVpJQtjT
mxeCA24VpUTkRD2tTY8E7SY+KCAu8EF3XUZFWnBlRhCkIByaHw1YuiQpsCoj
vLUMlBrAZqGYnsqBxsLKrOiCpNDq3ITS9IjexkJ4c0llTlx9SVp3c0l/W3VP
UwWYKR4VBSSYTU4wS/Bu9aRXP7ls5TmVFMBvHiXVIhxziBE6Zo+O1W+XE9dc
09tz+nfL+k0Hf0lHmVeTdexh4LJtl9gpwVkFCERrUWbk86TwFzcun79w9iww
0IXT54E6506cPA3C7cRvAbeuNOUnjlanT7QUy4brLaQ2z2TvEn94WQD6KXJr
GrujIr3RT76ZYYD11sDYVlPXp4lrcsKWmvZ6hvPOyN8F3MvE2jFwy2i3E9k3
ixrwYEYcyEEvFunGIGwjA9bBfhWsVQKBsCuqCNkFE4XVqJRifEYtrahtohrG
aOwh17ax2vu4fQNS1NjMJMHMJvpkjNc2+aFH9cYq2tCy/VKqnjYqG+8RjLYx
+qGEtgoCrILcUTtWX9hXnt5Tnt6Yn5Qa+uzB1bMRz+6VpoWXJQfXpEcWJ78K
f3I7LeJZT316WdJLwAP1uaF1OeFg1hTFv6jOjGjIjwFI0FgcM9icN9Ja2gsp
yo0PKkmLrMiObihOJAy3NBQnA/vA6guGuyFERI9Ljp+dJrmOT6Qi6nhIn47p
00+u2LhuDU3LGVvQM/XsfpcMZeIPGbiDsom+VZd8Z05/tG5eNbM3zew1M0vD
GgaFdMspnpWTPHICvqcqM+J5Goi2h3fOnT515vSZ82fOnv3t5Nl/1Dlz6vTV
sydKkkKHajKJTfnC/iotCmqndPhZfUCdFeEoQLgtBX5PT983sd+Z2Hs6+raK
siLBzvMQVmq/iTRgwcI18GZFa72iqU7VDJHWVEvLK6aKy0TlVeyCUmF5Laug
nJFXhkvMQsdmkDPLmRXt5lHmMkO/O+XaFth9VIVmhG7CsbVYspZEsPEYLgl7
QSvd91o/LjgOPLodk3hJyfRMUfTUURm2V4js4I3CKF21pI6q8ebyodq8gcqM
3vL06szYsCf3Ht28FBf0qCozsj47vDQpOC/+Zcij66UZUW0ViTVpr5oKY5qK
oqEF0UCmksTAqszw6qzwoebCtsqk7rp0VGdlX2NxW3VuQVJIeVZkbUFcR10u
eawN3lzaCS1uqStAD3V4lCSreNw1TTIIUUrm8KpN4NVObHvEVhkOeGfVzJGS
YC45SgO8w+6XkLtX7OI3i4aPG5Ytu3DLxlkxs3XcMQmld90+5dPQAcLx0O35
sUGpEYEhzwPu3b555vSpi2fPXAAynfjt7MlTZ0+dOnfiv8Ie34RXZ2KhOayu
4unROgOuxcPoXeAOAXWWpxCb07hd3cQ7M0Br3lsDc01KtJN7yA3pnWmBsPgX
2MIUdmXhRE42NjkVlZBKzCxkFdSrmgZsg0TzAEnbjTMNTpiG6G6cYINv+GRa
+d379n/Xv/z07y0Jta4JgQnN0o5N8HuHxGMjZvaEW8afU0vWrPp3C7MHc9Yd
m2JByXQJCA4eTksZFKGPY4050EjurMK2lCGhxcO1efCy1Jb8+PyEsJeP7j64
fjEvIbgmMwxWHJcf/zIt8smr+5fqCxMh+ZHQvLCOskRYaXxjYQyg6Kr0UOCd
muzw7trMEVghrCxhvKe6uz6vsz6/F1oCsK2hJAlakkxFdMjY46M9DW0NxUAd
n5piEY0vGTlK1pCKNbxuE8zpaHs+8YwAMU3rA1NJTGj2KLBiYqtNjJyegC9b
pt6vmo7WTdvOqV0Hf8c1ZZ4aF1N6V60Cv4ZmEaBUk6OFCcFZscGBAfce3b1z
99ZNEGfnT508B3Q5der86VPnTp+4cf5kdWYMCpLL7CwWDVRq0FArqd3HhC9w
BxcFo6sS9K5+4oOd/8klOrRN+fmYqYE6anOemdRrI8ClnXVaOMw2POTDEOfw
k5sc2SeT538Wdv+c2/5r8fXfqwf/u/np/9v78e/Nw7+33v+9ffRlfu/Iubqr
siyxhIt0lo1AYcLauPCOGRp+VsycU4kWddO7Lsuez7rj1K4bRX45dXYKZ+Wg
VKQ+zlALs78RJBuxowoLK0c1lgxW53QVJYNkjnzx6M7ViwDYylLCajNCgDpZ
kU8Tgh+FPr4Kq0yHlSY2ZAfDazMgeZGQ/ChYWRJQpywluD4vqrkkYay9pLsm
Dd1V2VmXfXzTe21uY0VGQ0kKrDqrpTKTTxnFD7eOD8FQA23AOwYeAnQcOb1P
z0cuGdnz+oldj1BOh2vZI0ApDaPXKcOIiK2LMxN8bKtbTX+/ajxY1u25RXtO
/oaN69fS+YTOJTMXNCCbCOWUkiH5ielRL6NePX1w++aDO7dv37h+GggEdDkF
7HPy3NkzZ379JTYwYLAmZ6KtSDxUrRhtAPZxTnTOsQcAv61JMVsa4oGV88Uj
/+iSb+u4YBAsKehbGsYbzeS+hr0tpm/yGQfT8nfy6bcy5Qe96UBv+mC2f3PP
ffMsfHL6Dq2eI7P9w4xxSzK9LlLsSNUbApmXTNePjFIh1YwOqIGGcQgmvHKu
b5q/pJFt23RAmjWjZF7B9ErJAAksLKQE3cEZbmENNjEGGkmd1djWY+/AyzPa
ChPzYl89uXP93vWLYY9v1GaEQXMjADNnRDyLfRkQ++oOvDHvmATKYvohWeWp
QbDShM6qtPrjy48RkIKYhoLooZb8kdYCRHvJMKyktjChve74UGZYbW5fc1lr
dTa6r1E4MUZCdk3ghmxizJyW7tNMzAhQGs7oop6xZmVtz/IklHajAGWXYq1T
oz4NeQoP86tJbCRUz0Nte6f355VvvOI3buGmnbvnlQpJnQDFAbbZxWgTH91Z
lZUVE5gQHvj47q1b167cvX37+rXj6zoXTp88e/K3s2fOnT55+ubZk7CCRGJT
Lh9erkBC9NgmMxHmpvcuCUbXZOPbGsIbI+OzR/7Fr/00N/N1yXy0YDiYlb+z
Cd4YudsqxoZoYp6OWWbgNtnUA5nsUKX8oNXsTysO1OpdiWxnSrIrFL8RSbe4
/HUWe5lOt6IQkk4Yu6lBCG8zUtCeKaZbzHJM0b0y9ppOsmmYXtZMLSi4XvGE
S4C3stEa8hAf0cbshwKBqD11uGPjFI/U5cPLMiA5seGPb716fO/e1fOpIQ9b
8iJAgpWlh2RHv4x+9ig1MgAOzQbqjDRntZTGlaeGtJUnghLaXJQAKYivzYms
zAgBSDDUlDfSUoAfqAe1tL44qbU6p74oeaCtaqwHOj7QjOxpUAjI8LY6ixC1
bOLOz7Cl9AGrBA9qywbIq9kpBb3XKsJo2UNWEXJeR5VPdPvUJJBsUhp8xSY4
XFLvuAT7PtGKiX6wpJDR4T4dfcXE8alIetYwvrcWYFt2QtSLB3fv3rh6/crl
e3fvXr965dSJE2dPnz57+tyZk6fvXbmUGflyqDqTBssTD1bpMVAjvsVO7fQd
15+xNSlqTzdx6BAeeRSf5vQ/1uzf151fFvSHLulbqxAItKdl7MgoK2y0h9jv
J4wtUnErk8QNFm2DSVtnTqxNUlfolAUqwUfAONDD+sEOdX+rYqDFgIE7mFiP
kOYVMaxcskNA809zl3VTy2rhwjTHL52cnaJYOdgZOmKa0M8eaqbB6yZ66gnt
gAdKUNCCgaqszrKMrPDHrx5cD3kWcP/a2ZKUoPaiuI6ylNz452mRz2NfPixK
DeptyGwpjhttyYdVJNVkRTQVRo+2FnXXZLSUJAH7VGaE9dRnj7QUIdpLyUON
HTXZxw+MVGZ2g5oDLUX2tVDQ8IH2Wjp+SMjEAQxet4n8ep6CNeKcJq46eLs+
qV83oZyE+9RkIa5FzxlaNk6qmXCPmqxgDIopPYC9v26Ztl38w3npmmXytV9k
EmNMU9gth3hRT9dM9omJcGDzgpS4hNDggNs3Lpw9DcLs4aMHV65cPnny5JmT
px7euXPnyuUb589A8pIAG/DgZWpErRHbaKN0zNK75zl9K1OjgNz2jcwPLtGR
T/ltyfRtyfJ1fuaTW/XOJto38wAzvAXIraFvy4grjNFF6rAH1+/HDc0RR+fI
Y2B5iUOucbgN1W1F99jxfU7qsGtyzMsbnxUQXAKimTlu41LcYsacgjuvESyq
+fPTLI+E5hSQTSysljomwfTS4Q2krkoiaDrttZimYkR9bm8laDHRr+5cjHsV
EBTw4Mmd89U5YR3lyQ05cZlRT1MiX0S+uFWZHdlRnQIrjweKQAvjIAXRvXXp
8IbMfmhuR1VGbU5UXW5sW3n6KKxkoLFgYrS1sSixtSKjCQRmfUF/W83E+ADQ
hU1G4EY7+ZPjx+rYRVY5+fgZN5BOds7bOemsCq9m9bkVeMZojYYBB5lmmULO
6ehq1oiSMWwSjf/cta2Yme/nJG+8wnU7e87AmOGjgTrrVq6M1Cmj9BckBKWE
v0oICwp68ujy+XMApM+dPf3wwb2rV0DQ3blz/caZX/77wm+/xL58MFSXNdlZ
Ih+u0qMbrIAP6V0AD5Z4g6sixI6afGDlffROf/Krj6+zeTRfvOpDp/StiQtY
bt/AeAcKkYb2VjWxKyNvCLFLLNQCE+WjjTpIcCelz0nud9OGPZMjfjbKx8V4
eWgvf9zFwzp5eJeA7JMwfFLWHLDMNNcvZ3klk3YeycYlGibHp/GD/LFOSlc9
sb2S0FaFa61EQgoGarMbCxIjAm4H3buSHvHixb2boU+uwSoSBuqzyxKD41/d
jXr5MOzJrYqsiK6atH5I5kBjHqQgtqUkEYQYHJIF1IE35IG+01yS3FKSguos
74PkcLDdvfV50JKUnsbipsocWH0hZhBGHOuZUXDJmD4CotfAHdvzKOwKqlVO
XDIyN138Xc+UTYox/LNvHmus1ioYW9BQzELEkoFl5KOAdywS/NdNy7ZLuOfi
78+Jl030PZ/UqaCsmHhbzimzACHEdbRX5YQ9uZsQ9ir0WcCd61cvXbhw+cLZ
MydPhLwKDHhwH0yfS2dOn//t17uXzpalhmGb8gW9pVpknRHf5KL3eJnwOWbv
PGdgXYbZ09He23hHs5JPXsUXjwqsj275e4fo+OqBkbGnpW4riTsa8paStKkg
roqxy0KUnzM6zxvz80b9PMS8ALUgxCwIsQsi3LyI4J8ieIS4OQllXjYJomxh
mreg5M8BNpAxPWK6S0i1sPHaCaQE2zfZ30TsrMHDqrBN5RiAarU5HZUZmVEv
Hl45nxT8GLwJvHcj7tWdfkgGvDotOywgKexR6NP7oU9uVefG9NZnojqKh5rz
q7PDm0sTh1vy+6C5XTUZwCwtpcn1+bENhXHIjrKBplx8fy1xAFKeEQE6DrQ8
C1qRjR5swY91cyfQStEkBTtkncKsWoRWGcmuIG06BLvuqU0nD0gzwxm0iVFC
bLNdiFgzTeoYfYu6SaMADaoNQOjDJd37BfW2jXO4IF23MpdMTI+K5lXRt5wi
h3RcToXTkZ3BD29kxkcFP374/NH9i+fOXTp7+vH9O9cuXnh07+6Thw/Onz4J
IOHmpXOhATfbixMnYPmi/nIVst5Caj8WiNEL+ukCf2Bbid83TB5YuEdO0QeH
5Mgh/eAUH9in3tl57yzsfRPzjYG+raGsK/Dr8uO1JsOuSDCLItSiGL0kHl8S
Y/0CzJKEtCwlL4pJ/inivJQyL6WuKFiLCu6CnDsv58xP8zziyf+oY2RhleQR
7mg7uasO31aFb63GQEtG6vK6KzOK08If3TgHRMmKepkV+eLFrcsZkY8GIekt
BTFJgXfjQwMCA26HPb1bnRs32JyP660YgxVDS5LaKlORnSVDzQWd1SDfcoZb
S6DFCc1lyYMtBVh41VhbsYAIL00L7YYWN1flNpSkN1Vl03GDAgZOxCUrRAy3
nDivZ2v5GL+BBaBrxy3ccHCtYlA/+6xTCD4K4lcSvdNYBblt2cgQk7qsYpxD
SnjtlYNwWzNOvp7lHSxIAIQvzrDtUtKaXbjp4E1P9HLwfbGBj3KSoqMCnz17
eO/Glat3rl27ffUKaKaXzp15dO/Os4CH506duHn5wst719OC7g9WJLO6SyXD
tdrxRiux1U5um6V1+dnw5anhHRXhtX4CCHFg5b+z8A4dUx/d0kOn6J2Nv2eY
3NFO7Onoe1rajpoK1uY0MBFpRUpYmyavyslL4L80TV9TMVYVYDFX5cwlBWNZ
yV7VCFZVwk29dOUY1Xg+6bF3zGycZgIhxfXT+huxbZXY9ipEU9lILeC09Lrs
uBd3rzy6eTH62f2i+ODMyBdPb1yoyAhFteVVpbxMCXkc/vJB4OM70a8etVRk
jPdUkgZqh1uKIUXJbVWZ6K6K/sY8IM0IrGSso6IXkt9Wld7TkIPurkR1lYuo
A23V6fVFSV2QYsAG0PJ0RF+zhEuW8mkU3JBTinPKKTo+ZtUhBt557RNvufjA
NSbB6DS18z/qOERjU+P1y0aamtFv4CNnFWSQgX+8tm3ZWBvWyQ/L8qUZGuiz
JhFuVj2x5xFLyJ1TlKHqvJS0qJDsxJin9+8As4BZc+HM2SsXzl+5cO7KhbMB
92+/ePzw5uXzgfeuRz+5XhL79LicdpfLR2tnMKD+NFlIsNnJ7nlu37oMuaul
7M1M7pvZ+xbOe7vgk0f+wSV97/jnwrWVf2DmvzVw3uhZuwDkNMxtDWtHz9vW
8/eMU+8c0++cin2n8o1duWOUbc9Itgzi1zblpkEGQHpDLwO0BpLNK2E4+WQj
a1xBHuGMtOHaq0ahRWNNxYONhXDQEHMTYp7de3z76vP7N1LDHpclB2VGvQx+
eLOjJh3TUVAQ/TjmJciHW4FP70e+vN9amU7oq5kYho7CyhtL0mGVmeQhKKK9
rLMmHdlVge2rHWgu6oXkddVlI7sqqWPNlFEoDQVrKEnqhhQ2V2Z0NuSP9ED4
TByPgWdRMXYJ1sDHmMTEHZ9i2y3e8wDvsE2CYbsEKRiHSAnNizqyidsvwUPB
GwWtZ4Y3ZpfidJyhz+va127Bkp70fkG6oKfOTpPmDRy7nLTjFqkY/TQErAdS
VpAUU56THhUU+PDundvXbly9eOnqpUvnz56+fvn8rWuXbl+79OrJg+CHt6If
30gPvleTHIRqyOF0l2iQdQZ8q4kAMxNb3IyuRcHgtpqwp6e9NjCOZ42R9e74
FGb5oetYo09u+UeH7NAq+WCTHDnlH93KTz7dkXfm0K079OiPfMajefPHect7
r/GtS/9udmbfqXtj1+6YVTtm5YpGtKgSeKRMpxDQGlVHQ0uwA/SBlmPLNBQN
QQAGZ7UUJmQGPQy5f/M5+Dg9uFEQ97w6IzQrOjDq6d2h5qLR5uyssPuRzx8E
3L8R/OJBVOCDrvpc8mA9fax5FFYBq8wFPEYahKA6K3rqs/qb8nnE3qHWkqGW
ko6qrMHmYuZ4B6KzhI3r7IbkDbZVVuXFwptL0AMtvMlxCn6YTkLYJXg9H22f
pux4p9dnRTte4ZqNYRaMWAUjjMEyLb1rXoU1sHuUtPaFmYkpUruCNWQUILSs
/rdeEdBlxUD+uCRdM1EcEgQoRG7l8c08cxoadQDSVp6ZHv6yubI0ISr84d3b
D+7cvX75ypULF8+fPnX5/Nn7t65fu3ju1qULyWGvUoIDskIfFkY+bswKw0Cz
+P2VKgTEgG0245sd5GYfs3tNitzSEHb1E0CgXT0dCPTBJfnsVQCNPhx/H6f6
7FN/ntN9np/54NV+WbR8X3F+XbR9WbB8mrN+nLN8WXR+8FkP3JZP864PXuuh
23LgMu479ctqEGt8v4zjFjEsbJKSguKMdeM76wfqCvpr88FqKUrJDX+S/OJ+
6MNbT25fiXh+tzghsD47LicqMC34HrKtqL08MSPiSVTgo9vXLkSHPE0Mf9ZV
n08bawUwNg5vaChJ7WoAlRNCGm7sb8prrUjhEuATiHZ4UzG8uawHWsjCduH6
qrmErs66rLHuutbqLFh1FgIOZZKGAbOR0PAZLsIgGHcpJ3Z80zs+2d6ceMkE
EgxuYPXzkbVm7sCChqCmt6vonS4FTs9HaHljUkq3lNy+6+S+8QmX9MQ9F3vb
znQc79iGMguPv4ZbMTK5aBimC6B9SE5CdF5a8tOH9+/dun3nxs0rFy78M3rO
gpZ688rFK2dOBT24lRP1siTuZSn4WCa9gOWG4RqzhP2V02P1GlSDYRxiI7V4
2fA1OWZLTXo9Qz+wsN+ZucA+R7Oy4xPM53TfFma+Lf/nlPnjc8q+rdi+rRyf
afVt0fZ92fl92fXJbzt0mz7N2T/5HR881gOXCagDvAPCDSABUMcjZlq5FBlx
hNrXNAIt6avJg1fnthWllCS8ygl7nBr4KPThzed3r6RGPi+Kf9mUl5Qb/SI/
+hEaVliTGZYW/jT8xcPL507GhDyNCwnobiiYRLYz0O2I7urG8uOkIgw3c4l9
uP76hsJY0nATlzgAbyqFN5ePdFSzxruJg/V8Yg+yu7qlMhP8pL+ldKy3AT/W
QUB2T+AGp2n9BuG4W814u6jdm1O+npO4VQQjfxiANGO40ioc9imxYjxUw+jx
aykOGX6K0MEfbxETYdt21u4sd9VI3bDQ3nr43ulxI2/QKSesWdjLRjob1UwZ
bIQUpiWFBeYkJ4a+eHn7+o3HDx4AXa6cPw/A4N7Na7euXb52/nTg/etJr+4X
x72oTQ2pTwtqzgzpLYjEQ7MFfVXysTotGqIfh1rIMC9nYFWK3lITAaQd2nkf
nKIjtwJY5uu8/vuyEUjzY8n8f8dirh8f3vf72uz3RdvPZefXeduR1wTW53nb
e7fx/azprV2/a1GtasUg2fxyLjCOmUXQUFHs0Y7xturOsvSOkrTWgsTyxFeF
Mc/zIp4mPr8fHnAr6MG1/MSQvJjn0LyE/JgXlamB451lJUmvEkMevwy4e/X8
6djQZ7HBjzpq8yaRbdSRJtJwy3BHDaiZaHg959gysI6azP7GQikTPdxeVVuY
REV2ArE4+G7KKJCsrzo/HhgNqIMfbafjB0joXhp+SMsedSqofj1716cE6ux5
xUbh8f7GClo3Y7jKIhh2y9FifKNTivSpyTYJjjfeqqTDFdSOLStj3ysE6uw4
mLsO1ryGYJ0C9kHP66h7bgEAgwFI7mBTeVlmUmZ8bFxY2J1jde6DZgpi7fL5
03evX7l97fLNS2df3r2SEvwgPyKgNvkVLC+6PS+yOz+irzgWB83i9JYDgVSo
BgByJlKbnze0qcDu6SYASx/ahQd2yaFr+htQZ8nwfdn8Y9n6fcnyc9X+fdn2
c9UJpPk+b/k6Z/7g1h+69Uce8Kp979K+tWs3DHLgmiXVMQ/4pWwHf0JPG+cM
d+Bg1YO1ed3l6W1FSTUpoWVxL4qin2WFPkl8+TDy8a3IJzeqsmMyI59AC5LL
UoIbC6OR7SW5sc/jQd++ff3ujWtxYc+Bd2BV2QxUB/AOBl6PG2oF6pBGYaKJ
MRqifbStvKUsnYmDs/D9sJrj7w4mMV1CysAkpkPKRHXU57VUZXZDClD9jSDZ
KJg+9FCbijk8q5pwKakg2T6sGXZcQjDxzVMoHqZJgG1yyTBOCVKEg3oU434t
1SLCCPHtAlwLc7hySUfa9wrWTNRtK2PXzplX4WensQDF/RrCG6/QwB8bgOb0
Q4tbKvKzE2Ljw0KePLgPms6ta1cBtl29cJxst69fvnHp7KsHN1JDHhZGBYBY
a8mJ6C2J6yuJBeoMlMVh6lOZXUXSkRogkBoNtVDaFkVj22ryWyOga96BTQTK
6c+Fme8LMz+Wjd+XTMA+P5etP5as3xbNn30zn736Dy7NB6f646z2g0t16FS+
s03vzEg3dZJVlWBJwZuTsFx8qpVDUhJH2MNtCEhRzz/S1KWHVyW8qkoILIl9
kRvxPOHFw6gnt5KC7jYUJMYH3m0tz6rLiW7Ii+ypzUoKuh/z6gn4pD24czMt
LizixV1oSSoYOjx8D36wcQLd09NY0ttUMkUbo6O6iAPNnXV5ZEQ7lzyMG4KN
dtZQEG2k0RYOqU/CQPS3lrXX5fQ2FiP7Gmm4fjyiG4/sUTCGAGjNG9l7c4rP
W+YVE8suGfeqyfKJHg1rcMVId8sxqokOhxTtUZNVjEHgHQmxg9CeO6fEgkzb
sjH9Cux7n3hRSzLxh+d1FLsYsTfLc8lx6LainrrcvsaKqvzMpIiwwKdPngQ8
unPj2rVLAKrP3rp6zGw3r5x/cf96emhAacyTupTA1pzwrsKYwfL40aqkkapE
RHUSrj6N0VEgR9Sr0FA1GuKY7FmSoLfV1HdGzpFD9NWj+OHXgNFzPIDm9T8W
jGB9m5sB67NHc+RSHjqmwTpyKo4P67FK92YE6wr2moK9KGH4pibcfPIMFaEh
DU8hOjFNZf2VWa35CZCsqOqUoLrU4OqElxXxgdnhz+KeA+9cz4t72lScFPro
emtFdlNhQmNRXFtlWsSTm1GBT+5cv/ro/u2spMiYVw8bipK5uF4RcAS6c6y7
HtEDaa/No2F6+KQhOrprpKMKDYdMYuFUVCeytwHTD6FhuniUQT51CNFT21yZ
Drh6sKPm2Dvj/XTCsIo1MjfDAi1yf0lzsKwFrrFMoXScETaq0S4ddysJFuGI
gdPnVRyfgzBNg3PRzVPjzcTOvCUtcU41/trFm1PiXju5m2aGjtkzK8e45JhF
PWVxhs5BA6osba/Og5TkFqYnP7oLGugj0EOvXjx37J3rl4E6ty5feHzrcmrw
w/K455D0IFheRG9p3FBFPLo2BQdJx0MzsPUpuIZUels+cJASBVGPQ+2T8GUJ
dkdDe2/hH1qEn5zSL27lV6/6m0/z2a0C64tH/dGleG+X7ltF4PXQJj2+q8ci
fmMQgGa6KqOtSCbcbKyNjrLQkHogzTCM2FoxUJndlp9Qnx5emxYCyQhvSAtt
SA0B9jlW58Wj6Ge36nLCgSKhAdcbCtPay1K7qjNbylJjXt4PeXL//p3rjx7c
SY0NiQ58AClO4ox3TzPGhNRhNByKHYINwmpwgy2CiVHgoPF+KH64lT7eSxyB
UZCd/bBS/EgLAw+XsjFjPbWtxwfD5XY3lTKIQwzSCI+OoQ5D/TOsDZfkw7rh
7ZLKNIX0qklcTCMH3ejVkDwKnIk7OMPuc4PgUhCAdzjIxmlK5xQGMitBWAUD
mxb6so68ZqS984p0zN4ZTr+JN+hX4ZcMND62FbSwwebKxtLc8qyU4OdPnz58
GHDvLrDP1Ytn7928euvqxVtXLjy7dyMp6EFx7NPGrNDOopj+8nhkbTKhKYPc
kk1tzSE3Z5EaM/D1qeCNcKByGgVRohsdjL4V6fi2irxvYB1Z+B8dks8uOVif
XP/c924VHVim3pmndvSc1zO81/r/Wzsq1pp0Yl6A9/OwdtqodWJkhtgvHG4h
NJeN1OS0FybUJAUBXZqyIxszwxuzwqEZoeWxz9JDn8Y8u58UeAdWEl+eGf78
9gVoYUZ39fHJqrV5sSGPbz+6df3+rRuPH97KTIqKCXpcmRPHxcMltCE5EzXW
WUfH9GMAB3ZU0zHdCi6WMNxCHmsTT6Jo472ovkYmcQA30oKA1xunJ7GDjb1N
xbCanJ7mEuRAI4syxp/Eorsqt72KNafo87Zlwz2l5Q25lDjKYDloNE4Z2iVB
6hk9OhbcOIUwCsZk1F4WAqKi9UhwzXbhiI7RsaDGA+8s6klv3AKXFAUoQk3r
dMvQK0baFKFtrK20D1o20tZQlhGfGBH65N7dB7dv3r15A9AamDt3bxzb5+m9
G4lBDwtjnkIyQruL48bq0jANqbimdEpbLqOz4Hh15FNbsslNWeTmbHZvmXSs
To1tcjJ6F6eQWwriW/3kexPv0CJ4O8N+rWPvG3gHRv4bADla5pZqclNJ31TQ
NxS0LQV9VUL2czGzLKSFMmjA92px3YIhKKmtfLQut7MosTYlGJIe2pIVBcuN
geVGwfKjGtKDS2Mfp4U9j3l6vyDqSXdVanFa+Mvblzsqi+ANRf3QgpL0sMd3
rwLauXPj+qun91PjwhLCX+YnRdBQnWLakJqHo6F6cQMwAWUUVBsKol1AHRZP
Insbi7ikYeo4fLQXQkJ10/F96MEm5RQRRFxnfUFbTe5Ae0VvWxkV2y9mU9Qc
5JZbvuOVf3/tWDCzXAqCSYjE9xS65OMG3oBfiZOTYCCvVMyB2WmSnjvGxTSL
8a3/eAepoXV4ZBjA0gtaIqg/Ru6AA1Qe3pCBBQfhJqN2ozsr2ipzkN3N0LLc
6KAXz+4DdW7cunr5zrE0YF25de3if9QpiX8ByQxty4scqk7GNWYQWrKAOszO
Ah68VNBfwestZXUUMTqKKC05YAxJR2vV440OOnyOj1iT4bcU1D0NfU8zuaOi
g7WlpG3IqasS4rIYuyDEzAvQC1OYpalxD3tkljVsoQ7ocN3TSBi3r47aXo5q
yO8oiK9LCYamhzVnRbbmRLXnx7bnxzTnRAAvl8U9TQl+ArxTlRo8BM0tSA6N
fHK3o7JgsLGspz43L/FVEPjA3bh248rFsJePMxIjk6OCshNCqYh26eSIRoAX
0zFjnRAeaZgw3IodaGJge/ViKrAPabSNjOwCpQY92CpkoMmYLo2EqhIQuxoK
22vyhrtrOpuKyOPwKRbJJif7dJNvF1Sft4x+HW3JyNRyhpSTvUsGulsxDnRR
07vArFezBrzqCeAdAQZGhpcJMBADq0832WMTDAMF/SrcGzdfM9kjI7Y5RWgD
p9+vxqsYcERbaXNJRmtF3gCsoTAj+cm9WwF3b92+fuXW9Sv3bwEKvQrUeX7/
ZtyLe4Uxzxqzw3vLEv7jHVJLFr2rkNVdxO0t4sGLBf1lQCZebxmrq5gGywNu
Eg5UqNGNBkK7jzu6IhpflxI2ZMR1Cf7/7+msu9vK0zz//85OT3dXpYKOmdmW
JVvMzMzMzBZbzCZZZpCZYidxkkqKq6ZqeqZndqZ3Fl7Q/pTa3XOec8+NrJPE
/vgLzxV9txH7tBp9Vw0+VPwPVe/bsudNxfOm6r2veC9z9uOEYXdRv+ZVVO2i
tI4ZkhGBTEC+yNATCuwEODeQIQbqLKADRo4bY831IUe7IX1P1TSoW07GzQ7M
DXSoWfiQSWoWk7Gz/aM9L8C38+KrLycGezAL05MDnfMTvQGTaLPoP9nIbFcT
bp2oFHOWE86EVwuEs54PnDRzhai1ELVXUt72NYGwZdGtrqa9h42MWy/Qi6h+
qwgA8lrlW6v56+3Up8va374/+flu/WojAvbNSkh+01y824682Y3t50xgLQUt
rpE0Xm1EV+OGlZg+YqCtR1XnNddmQgVkctvwv9uPAzogd1ZC8qOi41UzDG45
KNoiJq6OQ+Bi5106qYRFGe/r7Hzy6OXTr4B2nn75p9/lM9j5ZH64gzrbK8dP
2NgLQRluSUvKGigVO6tmZa462Wsuzrqbu+7mLdvZbR3ZWBUzvWyirTq4Wz7x
UVR9tWR6U3J9qPnBvKv6HsreN0X364L7Luu8zTpuc86brPNsyXYQ0W/65MtO
ccHMS2robj5KT5mRYUalWCCccS1xxsKAgjFRISY61MyAybBtOoiRLtjgc6sQ
55KS4aNd6Ml+g4AUNIqNQgpysn+45/nTR3/qev54sOvFwtzY3Hj/7NBLJRu7
txxrNdKtRh4YWTpori35kj7dWi6wUQzt1uOHa0uN4qLfLG3WEgm/SSkgxr26
i91K0qfnEWGgGDj1PIuGt7WS/3hR+/l+7X/8ePzuKHuxFt7NO/cLzrd7yeOa
4+EweVxxADr7RfvnZ+y0X+ZW9MtTNu5aRLmfNW2ntEA+rzfD355mf31Vu14P
5Jz8nbTpctV3ve47rXuSVoGMApdRcQYJR8GjL0yOvvjyT90vngA0j/7498AT
Op58CejAPzsbCGILE+YTozN6StHCqNlYy05Ww8Pb8vO3/ILtoGQrIAKwPg8X
kALHNRf4qhA07aOo8jSpvQD/dMZ8mW5/wshpwnASMxzHDYdR/W5QvR1Qrbtk
VbMgraEtSnE+PgqAaDsYSH/MmI40Y6HDbAyolQaxs2AWZvtLYuQIa25gfqj9
XuseOdkmJMCGO/GQIaOYFDJL9AIabLR3uOfFs8d/7u960fX0y+mxPhIaOj3Q
ISDPr+f9+yuJ/ZXMUtBi1XAbpWgh6gC9GnA5WE0driW3a3FgbsmgaSUfsai4
Mi5uvRjeXUmLGCgNoGPg23WCVMjx433jt7cbf33ffLuXulgO7Bfc7/ZzZyu+
643gu8PUHvCu9dBu3n7RjDWztt2StxRUFn2yWlC+nzHvpo0HOdOrRuDtbvT7
8/z1ejDvFDTiuqv1wHndeb8dzbqkQtychIKxqSQsAhq/AJka7OvtePrFH/7u
qz/9AdS27heP+zu+Qox18ZCjatK0hdV2tqSaUAKqcXEbHu6mn78dEOyGRDsh
8VZAsBcRb3h5QEqbfmHTJwTHnaBoNwS2Ien+oqwVUx9FVUfto/owpt6PqnYX
FTshxaZfuu4SVUzsvI4RlxPCEqybC7cwYCBi1IQpYGhGypwN0KHPudjzLs6C
lQE10qAS1Bh9umdh+Dlm+mVQQzdyMDjICAk2YpFSAmaJlkedHwPaedHT+WRk
oLv3xePx4U42BT071ElFTIRtUtDQDtdz68WoUcnMRBw7y+mEV3+wmt6qRE43
s4dr6ZVsIBtxLgVtpaRfJaQE7LKbVsOuFwkYcKeBF/XoXQbZD3eN//ju4JdX
tdegMOfsr7aWPrQK56uBH67Kp8vu81UfEM5hxXO5GS8GFTtFbzmkKngkJY/o
MG87KTkBHQDizU4EyOd6LQDobKXNr5qLh0XL7Ua4FFBpWFgmek4v4ZERsOnB
3rmxYTQM8rkb/OHF4y96Xz7t73gMWgEHPqylQMxMWECCzRpoJQtzzc0DYtkN
i/c+z0EUdGnhVoi3ExIBKFsB4XZQDJDtR6RHMQX4KphWXHWS1Jwu6U5S2uOU
9iCpOkyodiOKraB03S2oWVglA31JRQ4JMS4O3ExvCwSoxkSFWqhQFxvuF6C9
fISLDbOxYMDcgHboM33wkReE2e6okW0RECkLU3TEpFlCClrFFhlnYWyw/+WT
3q6nQ70ve1886e38ioaHI2eGF8Y6dULiZiVyuJ49apZiXoPHJDverMTc2nLc
sbecANp5e7a+nPWnQzaPSeG3qqIeg8soOmwWy5kAnzqvk5JjHr1DJ/nldfNv
3x39eLtyvBzcLXu/u1m93ox9c15+d5g+qXsAJrABHdf9yzF9OazeLbpzHnHE
QK8GJK8a4bOKYyet30hqbpuhrw+SoB6kbMy1qPq+sXiQM1+u+GphtUNOI8LG
hDQCCQ6dGOjt637R39PZ/exZz9MnfS+fdz9/MtT5FDgGGz6qo87ZOAs+CTZj
Zpfs7GU3dzskOYjKD2Ny8JM/iisOY2CUu2HpNqDWlozoENwekx8BLlHZYUR2
mlKDOU6pz9KfASU0h1Fwf9lWAGiHX7dyKiZWSkkOAjpcBPhNAOFioUNtNCAZ
eFCIBbd7+XA7Y87KnNfT5kTIMRJkANr7iI8aj5iFZjGVi4PQ5kedCvLnhzUV
uNkpIJmB3mcj/V39L551PvsCBR1nEeDQkS42DrKeC4ICcLZdzS46dCLadiXZ
KIR9RmEzH9ypLJ5tZW9b9ZhbA/Ycr0nu1EvNSl6jFLs6WLEqmWY5LexUBRzq
v7zb+dt3rfu9pdO1xW+u10BDeHuQebufOq17z5e9rap7M23aylpXk6a1JfNa
ylwOKlM2ds7JvVr2XtbdW0vavId/uux62I2+3YlGQJoHpOd1H4ie07p7LW6w
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
z59evzrb+3B3+m+/ffPzN68erne+fzj+5+9f/dM316AY/O2X2+/vG/vLodW0
q5Fz71SCP9xtgWWqtRq+2U3v19q1MOOR1GI6YHQ2GSlsE7s1AIrEpaYseVRh
k7Qcszo1HAWbImRRWWQsj0bm0iggfVRSEWgFYZ8LaEcq5MpEXImAI2RTqZh5
EgLCJWD1Qq6AjAXmRl+Y5qBmJWSEjoUxcVCLGkZITiw7eJth5V5cc5IxAXO7
yJvOMwagoKvfARWM1zlQDIyXWRA9OrDyAECnn5+uc543nqb1h3HNQUKzE1HV
HKL2Mw95KCsLpSDMsedHiJN9pJlBMmQIN9mNGuuCgYYw1oWd6k7Y5dc7lUrC
i5geAZum0yAT0tEHjWI24lQLaU6NhEOCU1AQCgLKwiCY6Hk6YoaFmQ1ZRFo+
gU/GwSbGoJODsPEOBWO+Eja51Oz2xx8wIQDNekJTCysrIeVa2pr2yiJWoZaD
8KhoiybOX3/99Mt3b/7y0/t//e3TTx9ffXx9/Nu3t3/77d3/+Kd3//nr/cfL
tYvt1E7Ff7yeBPPxauPhdOViM321nTlpJM6byfW0DSxTbdu0CZe8qpBZ/Pmy
OcGpoSfdKq+GD4zOpmCo+Qw+g8wgYAQMKh2PUQr5IHR8TpvHbmZRCEqpEKhJ
JRHIeWzgHATYLJ9CMkgEIgpOQEAyEDM8DIyPgUmIC2YBPqyiByT4rJld94h3
Yur9hPY0o2/TyYMWZwbmBuYiq7/Om26K5s9G12Z0mTWcLenadHKmy4L5JG3Y
i6sbAWkN7M5amk8E6jRGhpulQwbJMwOUuWEqdIQw3Yuf7IX2PkWMdHBQkyoW
6ng1vVFY1EtZfc+/NKtEIibBrOIfbpRtaoGcTVAJaGwinASfxc5O0pBzSg5J
SEFw8NMGMdkgZdOwCyjIOGKqDz3ZYxSSiot6p5wuxk/bRJiVqKqR1OTcvEUD
ZzluB6oJGBlaHlJOg33z7uLHT7c/frz54f3V6/PdHz5c/+c/f/O//uXTbx9P
wR769qR2uZ0+Wo3tlIO3e6X7o/qHc9CuK+fN9Nvjei1pAb0ibhOEDKx6zBK1
yjQ8gpiOJ6Nm/BZRxCYP6kVZvy5sk6sETCYBB0KHSyUBOnqFFAgn5HXZTTo2
jfTZ6CTgRqNcJgC7EHQG0HFoFQIShoWGgRTlYxd4aJiUjLRLaRENe1FBydsE
6yH1dlR3kNQdJtUnGT3wq3Mgls9QzrN6sBDdtJPIDP54VTBf5gAy41nacJE1
g7LXSup2Y6rNReWaX5bSMwJtZ4NLMFOchVE6FKAZAs2KBhvGttv187neR0z4
GBs9XonaThuZuEeHg00z8ciA3cAmoRx6aaOUMMvZNMycWsgQUDFk+AwBOkFa
mOSTEEoekU2aN8o5YhaeBJ8iw6fbATQ37NUyG2m3S85gw4cW9bT1uLaRUBe9
Cm/7GSacbEAZc0mZqJEP962b0+YvH29/+Xj9zz/c/+9//+G//+XDj29b397t
vDmufZ5qaz11vJE5WE28OqwA7TRyro2cq7UaLUcNK0kzWHW38t6YXSqmLOgl
DDpugUlYiDjkCZcalM5swBCwyBQ8JouEBwPogOixalUuiynkcwN/oxGxVoMW
xJBOLrFr1RImBQ+b5ZGJLr1KSMGysPMsNFREQApxcBEebhaSIxqWX4zLmnmb
MeNeynS4ZGylDac503Faf5RUtwHlfi8JVsAFlO1XZdt1AZyDpt0+XuZBSFnO
89aTrGk3rq25RQktzSvCWZhIFREqwkxzEONU6CAXNQmI4CZ7UaOd8wNPKXMD
uKlul4p5vJZaXvKrBYzZ4W6XUaWVcFVCht+q2VsraEQM1OyIWy+jwmdJ81MC
EpoIm8BBR8VMHGFhCixBUjYJWB84pyBmZAxsyCzcrwc8GgoD2hNU04t+CVBQ
OSA3cNAWMakQ1qa84l+/u//33z7+z79+9x+/vv/Pf/rw3/7xzQ8PrTenaz++
Ofj2duu+VT/bzO/U481qpJp0vD9fA562nrG/bZVaK+HluAU0jWJQm/NrZXSE
gkvUiNkLU6MSFiHp0zpVHL9OmA+bfCapWsgBXMAwiTg5n+M06hwGbTzo41BJ
ZCzSbtIDozOplQ6dRilgU5DzTBwG0BHRCRzcgpiCERLgfMy8mITS8whBJdPD
xxbt4saibidhPEqbzvLW07zlNGc+yRguC5arApDM/x1QFW7aUCz3Nedd1XVX
dd/XPPfL3puq6zRv3U8aVrzStJEN1ijQBtVkqAwPAVwY86M89BQLPkaDjWIn
eucHn+Ome+FDz6QUaCPj3i7HEh4TdKSbhJwNOY0mpYBLxbhNyt3VvIiKQUwM
BMwqKhKCnhkWkNHE+UkycoZDQsi5VGAgQjoB0FmYHCAvzEgY8LCNd74Z92kZ
dFivU4ZdSyg307pyUGPi4UwidMTG+T9LOhDq
      "], {{0, 161}, {138, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{138, 161},
    PlotRange->{{0, 138}, {0, 161}}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8197536347302494`*^9, 3.819753634732244*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ade16624-2825-4b03-a797-e8d082fe33c9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.819753545301951*^9, 
  3.8197535523192606`*^9}},ExpressionUUID->"002578c2-0e9f-4380-a497-\
02ee736ec466"],

Cell[BoxData[
 RowBox[{"face3D", "=", 
  RowBox[{"Image3D", "[", 
   RowBox[{"net", "[", "face", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8197539513142886`*^9, 3.8197539705447087`*^9}, {
  3.819754250465703*^9, 3.8197542521607304`*^9}, {3.8197562379620867`*^9, 
  3.81975624308106*^9}},ExpressionUUID->"ee99a591-800d-4777-9161-\
8b4cc16ed2ca"],

Cell[BoxData[
 RowBox[{"reconstruction", "=", 
  RowBox[{"Blur", "@", 
   RowBox[{"ImageReflect", "[", 
    RowBox[{
     RowBox[{"ImageResize", "[", 
      RowBox[{"face3D", ",", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"ImageDimensions", "[", "face", "]"}], ",", "105"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"Bottom", "\[Rule]", "Front"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8197541730118294`*^9, 3.8197541795584292`*^9}, {
  3.819756250205718*^9, 
  3.819756252287817*^9}},ExpressionUUID->"8a34f8ce-42e4-4eed-a58e-\
699118ca03f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coloredSlices", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SetAlphaChannel", "[", 
       RowBox[{"face", ",", "#"}], "]"}], "&"}], ",", 
     RowBox[{"Image3DSlices", "[", 
      RowBox[{"reconstruction", ",", "All", ",", "2"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8197543704483595`*^9, 3.8197543762699184`*^9}, {
  3.819756261948779*^9, 
  3.8197562640604706`*^9}},ExpressionUUID->"bf6229b7-0fac-4c17-ba10-\
ae35aff93015"],

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"coloredSlices", ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "75", ",", "65", ",", "55"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8197543837916374`*^9, 3.819754383793632*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"149e1da4-86fb-4215-855d-a0ce6ca632be"],

Cell[BoxData[
 RowBox[{"ImageReflect", "[", 
  RowBox[{
   RowBox[{"Image3D", "[", 
    RowBox[{"coloredSlices", ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ",", 
     RowBox[{"ViewAngle", "\[Rule]", 
      RowBox[{"20", " ", "\[Degree]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
   RowBox[{"Bottom", "\[Rule]", "Front"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8197544328973255`*^9, 3.819754432900344*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7bba92eb-c03c-42b1-8513-676532551f6b"]
},
WindowSize->{759, 601},
WindowMargins->{{Automatic, 295}, {24, Automatic}},
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 432, 9, 119, "Input",ExpressionUUID->"0e73775f-5958-4916-8bb5-be46bf11b77f"],
Cell[CellGroupData[{
Cell[1015, 33, 309, 7, 45, "Input",ExpressionUUID->"f8fd99f1-4c41-4e4b-be10-aaa7cb774b87"],
Cell[1327, 42, 1268723, 18575, 88, "Output",ExpressionUUID->"e901a294-0478-48ff-b515-8c4ef2237b2c"]
}, Open  ]],
Cell[1270065, 18620, 83588, 1375, 176, "Input",ExpressionUUID->"ade16624-2825-4b03-a797-e8d082fe33c9"],
Cell[1353656, 19997, 154, 3, 28, "Input",ExpressionUUID->"002578c2-0e9f-4380-a497-02ee736ec466"],
Cell[1353813, 20002, 350, 7, 45, "Input",ExpressionUUID->"ee99a591-800d-4777-9161-8b4cc16ed2ca"],
Cell[1354166, 20011, 574, 15, 64, "Input",ExpressionUUID->"8a34f8ce-42e4-4eed-a58e-699118ca03f7"],
Cell[1354743, 20028, 512, 14, 45, "Input",ExpressionUUID->"bf6229b7-0fac-4c17-ba10-ae35aff93015"],
Cell[1355258, 20044, 312, 6, 45, "Input",ExpressionUUID->"149e1da4-86fb-4215-855d-a0ce6ca632be"],
Cell[1355573, 20052, 613, 14, 82, "Input",ExpressionUUID->"7bba92eb-c03c-42b1-8513-676532551f6b"]
}
]
*)

